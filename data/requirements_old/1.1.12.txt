F1	An authenticator handles the authentication challenge/response cycles of a single connection.
F2	Cassandra includes integrated caching and distributes cache data around the cluster.?
F3	"Cassandra provides a built-in row cache for super-fast access to frequently requested data, competitive with standalone caching products?
F4	"Since Cassandra provides a durable database behind the cache, it can save your cache to disk periodically and read the contents back in when it restarts, so you never have to start with a cold cache."
F5	"The Cassandra Command Line Interface, CLI, client utility can be used to do basic data definition (DDL) and data manipulation (DML) within a Cassandra cluster."
F6	"Executes a sequence of (statement, parameters) tuples concurrently.?
F7	"Cassandra exposes a number of statistics and management operations via Java Management Extensions (JMX). Java Management Extensions (JMX) is a Java technology that supplies tools for managing and monitoring Java applications and services. During normal operation, Cassandra outputs information and statistics that you can monitor using JMX-compliant toolsAny statistic or operation that a Java application has exposed as an MBean can then be monitored or manipulated using JMX."
F8	"In Cassandra, you define column families. Column families can (and should) define metadata about the columns, but the actual columns that make up a row are determined by the client application. Each row can have a different set of columns."
F9	"Node-to-node encryption protects data transferred between nodes, including gossip communication, in a cluster using SSL (Secure Sockets Layer)."
F10	"The keyspace is the container for your application data, similar to a schema in a relational database. Keyspaces are used to group column families together. Typically, a cluster has one keyspace per application."
F11	"Replication is the process of storing copies of data on multiple nodes to ensure reliability and fault tolerance.To determine the physical location of nodes and their proximity to each other, the replication strategy also relies on the cluster-configured snitch, which is described below."
F12	Cassandra Query Language (CQL) 
F13	"A BATCH statement combines multiple data modification (DML) CQL statements into a single logical operation. BATCH supports setting a client-supplied, global consistency level and timestamp that is used for each of the operations included in the batch."
F14	Developers can access CQL commands in a variety of ways such as JDBC-based client programs.
F15	"A counter is a special kind of column used to store a number that incrementally counts the occurrences of a particular event or process. For example, you might use a counter column to count the number of times a page is viewed. Counter columns are different from regular columns in that once a counter is defined, the client application then updates the column value by incrementing (or decrementing) it."
F16	"A column can also have an optional expiration date called TTL (time to live). Whenever a column is inserted, the client request can specify an optional TTL value, defined in seconds, for the column"
F17	"A Cassandra column family can contain either regular columns or super columns, which adds another level of nesting to the regular column family structure. Super columns are comprised of a (super) column name and an ordered map of sub-columns. A super column can specify a comparator on both the super column name as well as on the sub-column names."
F18	"Hinted handoff is an optional feature of Cassandra that reduces the time to restore a failed node to consistency once the failed node returns to the cluster. It can also be used for absolute write availability for applications that cannot tolerate a failed write, but can tolerate inconsistent reads"
F19	Cassandra supports row mutation.
F20	"Cassandra writes are first written to the CommitLog, and then to a per-ColumnFamily structure called a Memtable. A Memtable is basically a write-back cache of data rows that can be looked up by key -- that is, unlike a write-through cache, writes are batched up in the Memtable until it is full, when it is flushed."
F21	"When thresholds are reached, Cassandra periodically flushes in-memory data structures (memtables) to SSTable data files for persistent storage of column family data."
F22	Most applications can be designed with a data model that supports ordered queries as slices over a set of columns rather than range scans over a set of rows.
F23	"When a Memtable is full, Cassandra writes to disk as an SSTable. SSTable - sorted string table, key/value storage sorted by keys. SSTable is on-disk data structure and is always immutable."
F24	"A TRUNCATE statement results in the immediate, irreversible removal of all data in the named column family."
F25	Marshal defines Cassandra operations for persistence of complex Haskell data objects with custom-selected but implicitly performed serialization.
F26	"In the background, Cassandra periodically merges SSTables together into larger SSTables using a process called compaction. Compaction merges row fragments together, removes expired tombstones (deleted columns), and rebuilds primary and secondary indexes."
F27	"Adds WHERE arguments to the queryset, returning a new queryset and Returns a QuerySet filtered on the keyword arguments."
F28	"Unlike almost every other configuration choice in Cassandra, the partitioner cannot be changed without reloading all of your data. Therefore, it is important to choose and configure the correct partitioner before initializing your cluster. "
F29	"The RandomPartitioner is the default partitioning strategy for a Cassandra cluster, and in almost all cases is the right choice. The RandomPartitioner uses consistent hashing to determine which node stores which row. "
F30	"Assumes keys are UTF8 strings. Not recommended both because of this limitation and because globally ordering all your partitions generates hot spots: some partitions close together will get more activity than others, and the node hosting those will be overloaded relative to others.?
F31	Cassandra provides the ByteOrderedPartitioner forordered partitioning. This partitioner orders rows lexically by key bytes. An order-preserving partitioner that operates on partition key bytes lexicographically. 
F32	"Failure detection is a method for locally determining, from gossip state, if another node in the system is up or down. Failure detection information is also used by Cassandra to avoid routing client requests to unreachable nodes whenever possible."
F33	"The gossip process tracks heartbeats from other nodes both directly (nodes gossiping directly to it) and indirectly (nodes heard about secondhand, thirdhand, and so on)Gossip is a peer-to-peer communication protocol in which nodes periodically exchange state information about themselves and about other nodes they know about. The gossip process runs every second and exchanges state messages with up to three other nodes in the cluster. The nodes exchange information about themselves and about the other nodes that they have gossiped about, so all nodes quickly learn about all other nodes in the cluster. A gossip message has a version associated with it, so that during a gossip exchange, older information is overwritten with the most current state for a particular node. Cassandra uses a protocol called gossip to discover location and state information about the other nodes participating in a Cassandra cluster. "
F34	"allows you to read data stored in Cassandra from a Hadoop MapReduce job, and its companion class and  to write the results back into Cassandra. "
F35	"Cassandra 1.0 introduces support for data compression on a per-ColumnFamily basis, one of the most-requested features since the project started. Compression maximizes the storage capacity of your Cassandra nodes by reducing the volume of data on disk."
F36	A snitch maps IPs to racks and data centers. It defines how the nodes are grouped together within the overall network topology.  A snitch determines which data centers and racks nodes belong to. Snitches inform Cassandra about the network topology so that requests are routed efficiently and allows Cassandra to distribute replicas by grouping machines into data centers and racks.
F37	"By default, all snitches also use a dynamic snitch layer that monitors read latency and, when possible, routes requests away from poorly-performing nodes. The dynamic snitch is enabled by default and is recommended for use in most deployments."
F38	The SimpleSnitch (the default) does not recognize data center or rack information. Use it for single-data center deployments (or single-zone in public clouds).
F39	"The RackInferringSnitch determines the location of nodes by rack and data center, which are assumed to correspond to the 3rd and 2nd octet of the node's IP address, respectively. Use this snitch as an example of writing a custom Snitch class."
F40	"This snitch uses a user-defined description of the network details located in the cassandra-topology.properties file. Use this snitch when your node IPs are not uniform or if you have complex replication grouping requirements. When using this snitch, you can define your data center names to be whatever you want.?
F41	Use the Ec2Snitch for simple cluster deployments on Amazon EC2 where all nodes in the cluster are within a single region. The region is treated as the data center and the availability zones are treated as racks within the data center.?
F42	"Use the EC2MultiRegionSnitch for deployments on Amazon EC2 where the cluster spans multiple regions. As with the Ec2Snitch, regions are treated as data centers and availability zones are treated as racks within a data center.?
F43	"A new connection between nodes will either stream or message, determining the connection type."
F44	All ports in cassandra are TCP.
F45	"Cassandra uses one thread-per-client for remote procedure calls. For a large number of client connections, this can cause excessive memory usage for the thread stack. cassandra defines a scheduler to handle incoming client requests according to a defined policy. This scheduler only applies to client requests, not inter-node communication."
F46	Cassandra has A Factory for providing and setting up Client and Server SSL wrapped Socket and ServerSocket.
F47	In cassandrathe Thrift interface is a legacy API for older clients. Thrift is an interface definition language and binary communication protocol that is used to define and create services for numerous languages. It is used as a remote procedure call (RPC) framework. 
F48	"Streaming is a component which handles data (part of SSTable file) exchange among nodes in the cluster. When you bootstrap a new node, it gets data from existing nodes using streaming."
F49	"Update CQL to generate microsecond timestamps by default. cassandra-cli use micro second timestamp, but CQL use milli second. cassandra-cli set micro second timestamp by FBUtilities.timestampMicros. But CQL insert or update operation set milli second timestamp by AbstractModification.getTimestamp. If you register data by cassandra-cli, you can't update data by CQL. Because CQL timestamp is judged as past time."
F50	"Fix counting CFMetadata towards Memtable liveRatio. NPE in describe_ring. I have a 2 DC, 2 node per DC cluster. DC1 had it's seed replaced but I hadn't restarted. I upgraded to 0.8.4 in the following fashion: -edited seeds -stopped both DC1 nodes -upgraded jars -started both nodes at the same time The non-seed node came up first and showed the following error. Then when the seed node came up, the error went away on the non-seed node but started occurring on the seed node."
F51	"Kill server on wrapped OOME such as from FileChannel.map. When a mmap fails, Cassandra should exit. "
F52	"remove unnecessary copy when adding to row cache. probably don't need to do full copy to row cache after un-mmap() change. If so, maybe slightly better performance in both speed and memory"
F53	Log message when a full repair operation completes. Log message at INFO when a global or keyspace level repair operation completes. If JMX times out it's difficult to tell when repair completes.Right now we log at DEBUG for each column family but we need a way to tell when the repair operation completes as a whole.
F54	"Fix streamOutSession keeping sstables references forever if the remote end dies. A streamOutSession keeps sstables references forever if the remote end dies. A streamOutSession acquire a reference on the sstable it will stream and release them as soon as each sstable has been fully streamed. However, since a stream session has currently no means to know when it failed, we'll keep references indefinitely (meaning until next restart) if their is a failure. One way a stream session could very easily fail is if the remote end dies. We must make sure we correctly release sstable references when that happens."
F55	"Remove dynamic_snitch boolean from example configuration (defaulting to true) and set default badness threshold to 0.1. Remove ability to disable dynamic snitch entirely. We've moved dynamic snitch from ""new, default to off"" to ""well tested, default to true,"" and it's time now to take the next step to ""there is no reason to disable it, and keeping the option around just lets people shoot their foot off."""
F56	"Base choice of random or ""balanced"" token on bootstrap on whether schema definitions were found. Nodes started at the same time end up with the same token. Since auto boostrap is defaulted to on when you start a cluster at once, you can end up with nodes being assigned the same token."
F57	"Fixes for LeveledCompactionStrategy score computation, prioritization, scheduling, and performance. LeveledCompactionStrategy is too complacent. BF size calculation doesn't take into account LCS breaking the output apart into ""bite sized"" sstables, so memory use is much higher than predicted. ManyToMany merging is slow. At least part of this is from running the full reducer machinery against single input sources, which can be optimized away."
F58	parallelize sstable open at server startup. Improve SSTableReader.load() when loading index files. 
F59	fix handling of exceptions writing to Outbound Tcp Connection. Outbound Tcp Connection throws RuntimeException.
F60	"Allow using quotes in ""USE &lt;keyspace&gt;;"" CLI command. In the CLI USE &lt;keyspace&gt; doesn't work for numeric keyspaces."
F61	"Don't allow any cache loading exceptions to halt startup. Failure reading a erroneous/spurious AutoSavingCache file can result in a failed application of a migration, which can prevent a node from reaching schema agreement."
F62	Fix sstableloader --ignores option. sstableloader ignores option doesn't work correctly. The --ignores option is supposed to take an argument but it doesn't.
F63	"File descriptor limit increased in packaging. increase file descriptor limit in deb, rpm packages. "
F64	Fix deadlock in commit log during flush. inherent deadlock situation in commitLog flush.
F65	Log a meaningful warning when a node receives a message for a repair session that doesn't exist anymore. AssertionError when repairing a node. 
F66	"test for NUMA policy support as well as numactl presence. Don't fail when numactl is installed, but NUMA policies are not supported."
F67	Fix FD leak when internode encryption is enabled. Enabling SSL on a fairly light cluster leaks Open files.
F68	MergeIterator.get assert that it don't get an empty list of sources.Remove incorrect assertion in mergeIterator. MergeIterator assertion on sources != empty can be thrown. 
F69	FBUtilities.hexToBytes(String) to throw NumberFormatException when string contains non-hex characters. CQL does not throw an error when invalid hex is supplied
F70	"Keep SimpleSnitch proximity ordering unchanged from what the Strategy generates, as intended. Simple Snitch.compareEndpoints doesn't respect the intent of the snitch. SimpleSnitch is supposed to not sort the input addresses, thus respecting the order of the partitioner. "
F71	"remove Scrub from compactionstats when finished. Sstable scrub status persists in compactionstats after scrub is complete. When scrubbing the sstables on a node, the 'Scrub' info persists in the 'compactionstats' nodetool utility, even after the scrub is complete."
F72	fix counter entry in jdbc TypesMap. Cannot read counter value from jdbc cql. 
F73	fix full queue scenario for ParallelCompactionIterator. Error during multi-threaded compaction. I'm running 0.8.6 plus the multi-threaded compaction patch in issue 2901. I'm getting an error compacting
F74	"fix bootstrap process. Bootstrap is broken in 1.0.0-rc1.  the condition to bootstrap is that there are non-system tables instead, a not is missing, and the setToken() was wrongly push up into the ""I'm not bootstrapping"" block so a boostrapping node was left in the joining state."
F75	don't try delivering hints if when there isn't any. Disabling hinted handoff counterintuitively continues to log handoff messages. 
F76	CLI documentation change for ColumnFamily `compression_options`. CLI does not support removing compression options from a ColumnFamily
F77	ignore any CF ids sent by client for adding CF/KS. CfDef can default to an invalid id and fail during system_add_column_family.
F78	remove obsolete hints on first startup. 1.0 needs to clean out old-style hints. 
F79	"use correct ISortedColumns for time-optimized reads. assert err on ArrayBackedSortedColumns.addColumn. every thing is flushed to the sstables, but not in the same sstables, and the columns are in some what 'random' form."
F80	Evict gossip state immediately when a token is taken over by a new IP. Replace token leaves the old node state in tact causing problems in cli. in the replace token patch we dont evict the node from the Gossip which will leave the node lingering around and causes issues in cli (UNReachable nodes) As a part of the replace token if the token is replaced with another token we should remove the old nodes Gossip states.
F81	close scrubbed sstable fd before deleting it. Unable to delete after running scrub. Another problem with sstable deletions on 1.0. Running scrub produces lot of unable to delete messages on windows.
F82	"fix bug preventing obsolete commitlog segments from being removed. possible early deletion of commit logs. I ran my cluster for about 2 days. the cluster has 2 nodes. I restarted one box several times, and the other one was always running. the one always running ended up accumulating 100GB of commit logs."
F83	"tolerate whitespace in seed CDL. Whitespace in SimpleSeedProvider string makes seed ignored. If a seeds given to SimpleSeedProvider contains whitespace, the seed will be ignored."
F84	"Change default heap thresholds to max(min(1/2 ram, 1G), min(1/4 ram, 8GB)). reduce default heap size. With off-heap caching now the default and with auto-flushed memtables demonstrated to do a good job with smaller heaps, I think it's time to reduce heap sizes to decrease GC pause times."
F85	Fix broken CompressedRandomAccessReaderTest. CompressedRandomAccessReaderTest fails on Windows. 
F86	"(CQL) fix type information returned for wildcard queries. cqlsh: Error running ""select *"" vs ""select all columns"""
F87	add estimated tasks to LeveledCompactionStrategy. add estimated tasks to LeveledCompactionStrategy
F88	"avoid including compaction cache-warming in keycache stats. Compaction degrades key cache stats. When ""compaction_preheat_key_cache"" is set to true, then during compaction, it keep tracks of cached keys to to re-cache their new position. It does this by calling the following method on every key of the compacted sstable : sstable.getCachedPosition(row.key) which also update cache stats, thus lowering hit rate"
F89	"run compaction and hinted handoff threads at MIN_PRIORITY. Add compaction_thread_priority back. This turns out to be false in the majority of deployments. In many (if not most) situations, compaction is actually CPU bound, not IO bound, so multithreaded compaction is generally helpful, but the priority needs to be lowered in order to prevent it from stealing CPU used for reads/writes."
F90	default hsha thrift server to cpu core count in rpc pool. make HSHA the default Thrift server. HSHA has been an option since 0.8.3.
F91	"add bin\daemon to binary tarball for Windows service. Apache Daemon missing from the binary tarball. Apparently the tools used to run the binary release are missing from the binary tarball. I will verify that they are in the 1.0 branch, then update the ticket so we can ensure that they are included."
F92	Fix places where uncompressed size of sstables was use in place of the compressed one. Uncompressed sizes are used to estimate space for compaction of compressed sstables. We are using the uncompressed data size when estimating if we have enough to compact sstables. This means we can easily refuse compaction when there is clearly enough room to compact. 
F93	Fix hsha thrift server. HsHa broken at startup.
F94	"Make sure repair only stream needed sstables. Repair still streams unnecessary sstables. unfortunately got committed with the use of the wrong streaming method, the one that stream all the sstables of the keyspace."
F95	"acquire references during index build to prevent delete problems on Windows. Fail to delete -Index files if index is currently building. If there is index building in progress, following errors are thrown if cassandra is trying to delete *-Index.db files."
F96	"describe_ring should include datacenter/topology information. describe_ring should include datacenter/topology information. describe_ring is great for getting a list of nodes in the cluster, but it doesn't provide any information about the network topology which prevents it's use in a multi-dc setup. It would be nice if we added another list to the TokenRange object containing the DC information."
F97	Thrift sockets are not properly buffered. Thrift sockets are not buffered properly. adds back BufferedInputStream and BufferedOutputStream to TSocket in new TCustomSocket class. 
F98	performance improvement for bytebufferutil compare function. Performance issue in ByteBufferUtil. Profiling 1.0 we can see ByteBufferUtil.compareUnsigned is slow. We can avoid the problem when the ByteBuffer has a backing array.
F99	"add system.versions ColumnFamily. Expose server, api versions to CQL. Need to expose the CQL api version; might as well include the server version while we're at it."
F100	reduce network copies. remove more copies from read/write network path. RowMutation.serializedBuffer and ReadVerbHandler both do an extra copy of the serialized data. We can avoid this be pre-computing the serialized size and allocating an appropriate buffer. ReadResponseSerializer doesn't compute serialized size correctly
F101	limit nodetool to 32MB of heap. java heap limit for nodetool
F102	"(CQL) update parser to accept ""timestamp"" instead of ""date"". Update CQL type names to match expected (SQL) behavor. "
F103	"Fix CLI `show schema` to include ""compression_options"". show schema' in cli does not show compression_options. using the cassandra-cli command line tool, I realized that a 'show schema' does not print out the compression_options I specified when creating them."
F104	Snapshot to include manifest under LeveledCompactionStrategy. snapshot should include manifest under leveledcompaction
F105	(CQL) SELECT query should allow CF name to be qualified by keyspace. CQL queries should alow talbe names to be qualified by keyspace. 
F106	(CQL) Fix internal application error specifying 'using consistency ...' in lower case. CQL: Internal application error specifying 'using consistency ...' in lower case; must be upper case.
F107	fix Deflate compression when compression actually makes the data bigger. Deflate Compression corrupts SSTables. it seems that the Deflate Compressor corrupts the SSTables. 3 out of 3 Installations were corrupt. Snappy works fine.
F108	optimize UUIDGen to avoid lock contention on InetAddress.getLocalHost. unnecessary locking in hint path due to InetAddress.getLocalhost().
F109	tolerate index being dropped mid-mutation. dropping index causes some inflight mutations to fail. dropping index causes some inflight mutations to fail. hector on client side didnt throw any exception. Cancelling index build throws assert error
F110	"CompactionManager is now responsible for checking for new candidates post-task execution, enabling more consistent leveled compaction. CFM.toAvro() incorrectly serialises key_validation_class defn. "
F111	Cache HSHA threads. Make HSHA cached threads. JDK's newCachedTP does the following.
F112	use CF/KS names as snapshot prefix for drop + truncate operations. Enhance human-readability of snapshot names created by drop column family.
F113	"Break bloom filters up to avoid heap fragmentation. bloom filters should avoid huge array allocations to avoid fragmentation concerns.The fact that bloom filters are backed by single large arrays of longs is expected to interact badly with promotion of objects into old gen with CMS, due to fragmentation concerns"
F114	fix cassandra hanging on jsvc stop. stop Cassandra result in hang. 
F115	"Avoid leveled compaction getting blocked on errors. LeveledCompactionTask is too fragile and can block compactions. If any error happens during a LeveledCompactionTask, it will just block every compaction."
F116	"Make reloading the compaction strategy safe. CFS reloading of the compaction strategy is done for every metadata update and is not thread safe. The reloading of the compaction strategy done during CFS.reload is not thread safe. In particular, this is a problem for leveled compactions."
F117	ignore 0.8 hints even if compaction begins before we try to purge them. NPE in hinted handoff. 
F118	remove procrun (bin\daemon) from Cassandra source tree and artifacts. Apache Daemon missing from the binary tarball
F119	make cassandra compile under JDK7. Currently system won't compile under JDK 7 because of errors in CQL JDBC component.
F120	"remove dependency of clientutil.jar to FBUtilities. clientutil depends on FBUtilities. clientutils' (indirect )dependency on FBUtilities (needed for tests) would result in huge numbers of classes being pulled in transitively.The attached patch moves the bytesToHex and hexToBytes methods into a new class (o.a.c.utils.Hex), which has no external dependencies."
F121	"avoid truncation errors by using long math on long values. use long math, if you want long results. Code calculates long values, using integer intermediate input, which can cause truncation errors, safer just to use long input."
F122	"avoid clock drift on some Windows machine. Avoid clock drift on some Windows machines. Performing Thread.sleep() with non-rounded values increases the frequency of interrupts on Windows machines; this can cause performance problems, and on some machines even clock drift problems for the duration of the sleep."
F123	"display cache provider in cli 'describe keyspace' command. it would be nice if ""describe keyspace"" in cli shows ""Cache Provider"". Describe keyspace in the cli doesn't show the cache provider it would be nice to show it to verify the settings."
F124	"fix incomplete topology information in describe_ring. describe_ring topology information is wrong/incomplete.  topology information was added to describe_ring, however it asks the gossiper for the DC information, and the gossiper can only have this with a gossip-enabled snitch, which currently means the Ec2Snitch. Instead, it should be asking the snitch for the DC for each endpoint."
F125	"expire dead gossip states based on time. Expire dead gossip states based on time. Currently dead states are held until aVeryLongTime, 3 days. The problem is that if a node reboots within this period, it begins a new 3 days and will repopulate the ring with the dead state."
F126	"improve CompactionTask extensibility. CompactionTask is still fairly coupled to SizeTieredCompaction, including some ugly casting."
F127	"Allow one leveled compaction task to kick off another. Allow one leveled compaction task to kick off another. Leveled compaction wants to prevent multiple tasks from running at once, but this check also defeats the ""kick off another compaction if there is more work to do"" code in CompactionTask. So currently LCS relies completely on the every-five-minutes compaction check, which is not enough to keep up with heavy insert load."
F128	allow encryption only between datacenters. Enable encryption for data across the DC only. Make DC level Encryption option. 1) Modify EncryptionOptions to add inter_dc option. 2) Modify OutboundTCPConnection.connect() to check if it is in the same DC and if the encryption option is enabled.
F129	fix truncate allowing data to be replayed post-restart. truncate can still result in data being replayed after a restart.
F130	make iwriter final in IndexWriter to avoid NPE. NPE when writing SSTable generated via repair. A NPE is generated during repair when closing an sstable generated via SSTable build. It doesn't happen always. The node had been scrubbed and compacted before calling repair.
F131	(CQL) update grammar to require key clause in DELETE statement. NPE on malformed CQL. 
F132	"(CQL) allow numeric keyspace names in USE statement. Can't USE numeric keyspace names in CQL. Cassandra allows keyspace names to start with a digit or an underscore (see o.a.c.db.migration.Migration.isLegalName), but CQL's USE statement only accepts a CQL identifier, which must start with a letter. So there's no way to use a keyspace named ""142"" or ""_hi_"" in CQL"
F133	(Hadoop) skip empty rows when slicing the entire row. Skip rows with empty columns when slicing entire row. We have been finding that range ghosts appear in results from Hadoop via Pig.
F134	"Fix handling of tombstone by SSTableExport/Import. SSTableImport/Export don't handle tombstone well if value validation != BytesType. SSTableImport/Export use the value validator even on tomstone, but for those the value is the local deletion time, so this don't necessarily validate (with UTF8Type for instance)"
F135	fix ColumnIndexer to use long offsets. 2GB row size limit in ColumnIndex offset calculation. Index offset is calculated using int instead of long resulting in overflow at 2GB row size. As a result affected columns can not be retrieved.
F136	Improved CLI exceptions. need initClause when catch Exception and throw new Exception in cli. we added initCause to the Cli such that we could see more meaningful exception stacktrace when certain exception is thrown.
F137	Only count compaction as active (for throttling) when they have successfully acquired the compaction lock. Compaction throttling can be too slow. Compaction throttling needs to know how many active compactions are running (to divide bandwith for each active compaction). The way active compaction is counted can be broken because it counts the number of active threads in the executor BUT the thread starts by acquiring a lock.
F138	"Display CLI version string on startup. Cassandra-CLI command should have --version option. Implementing ""cassandra-cli --version"" command line option would make it easier to write bug reports and check the versions of tools in use. Or if you want to make it a CLI command inside the tool, I don't know. --version option seems to be the standard way."
F139	"Hadoop) make CFIF try rpc_address or fallback to listen_address. Make CFIF use rpc_endpoint prior to trying endpoint. we probably need to attempt to use the rpc_endpoint address first, and then fall back to the gossip endpoint if we don't get what we want."
F140	Hadoop) accept comma delimited lists of initial thrift connections. Unify support across different map/reduce related classes for comma seperated list of hosts for initial thrift port connection.
F141	ColumnFamily min_compaction_threshold should be >= 2. cassandra-cli allows setting min_compaction_threshold to 1.
F142	"Pig) add 0.8+ types and key validation type in schema. Pig Storage Handler: Add >=0.8.1 types, Guess right type for Key in Schema. "
F143	Fix completely removing column metadata using CLI. unable to remove column metadata via CLI. 
F144	CLI `describe cluster;` output should be on separate lines for separate versions. Schema versions output should be on separate lines for separate versions.C
F145	fix changing durable_writes keyspace option during CF creation. creating column family sets durable_writes to true.
F146	"avoid locking on update when no indexes are involved. Avoid lock contention in hint rows.hint writes are keyed by target IP, to make replay efficient. However, this means that we'll hit a lot of lock contention in table.apply where we synchronize for potential index updates."
F147	"fix assertionError during repair with ordered partitioners. AssertionError when adding a node and doing repair, repair hangs. "
F148	correctly serialize key_validation_class for avro. CFM.toAvro() incorrectly serialises key_validation_class defn. 
F149	don't expire counter tombstone after streaming. AssertionError in PrecompactedRow.write via CommutativeRowIndexer during bootstrap
F150	"prevent nodes that failed to join from hanging around forever. If node fails to join a ring it will stay in joining state indefinately. While attempting to add a new node to my ring something went wrong and I had to terminate the node on ec2. After this the node keeps appearing in the ring command in ""joining"" state and never goes away."
F151	remove incorrect optimization from slice read path. ReadResponseSerializer.serializedSize() calculation is wrong.
F152	Fix race in AntiEntropyService. ConcurrentModificationException during nodetool repair.
F153	"""defragment"" rows for name-based queries under STCS. Eagerly re-write data at read time (""superseding / defragmenting""). it will be possible to implement an optimization to eagerly rewrite (""supersede"") data at read time. If a successful read needed to hit more than a certain threshold of sstables, we can eagerly rewrite it in a new sstable. "
F154	Add timing information to cassandra-cli GET/SET/LIST queries. Add timing information to cassandra-cli queries. It would be highly helpful for monitoring cluster health to return ETA on queries in cassandra-cli. MySQL is doing it too and you can switch this feature on in Postgresql and Oracle CLI.
F155	"Only create one CompressionMetadata object per sstable. CompressionMetadata is not shared across threads, we create a new one for each read. The CompressionMetada holds the compressed block offsets in memory. Without being absolutely huge, this is still of non-negligible size as soon as you have a bit of data in the DB. Reallocating this for each read is a very bad idea."
F156	"cleanup usage of StorageService.setMode() StorageService.setMode() is used inconsistently. StorageService.setMode(), which ends up setting the OperationMode attribute of the related mbean, is used inconsistently. In most places, it's used like ""setMode(""MODE: details""), but in a few places, it's used more like a normal log message. To make this attribute more usable through JMX, setMode() should have a signature like setMode(mode, details), where the mode parameter could be an enum (or even just a string, the main thing is just being consistent). The OperationMode JMX attribute should definitely remain a string, though."
F157	"Avoid large array allocation for compressed chunk offsets. Avoid large array allocation for compressed chunk offsets. For each compressed file we keep the chunk offsets in memory (a long[]). The size of this array is directly proportional to the sstable file and the chunk_length_kb used, but say for a 64GB sstable, we're talking ~8MB in memory by default."
F158	fix DecimalType bytebuffer marshalling. Can create a table with DecimalType comparator but CQL explodes trying to actually use it.
F159	fix bug that caused first column in per row indexes to be ignored. PerRowSecondaryIndexes skip the first column on update. PerRowSecondaryIndexes skip the initial field on apply
F160	"add JMX call to clean (failed) repair sessions. Add a JMX call to force cleaning repair sessions (in case they are hang up). A repair session contains many parts, most of which are not local to the node (implying the node waits on those operation). You request merkle trees, then you schedule streaming (and in 1.0.0, some of the streaming don't involve the local node itself). It's lots of place where something can go wrong, and if so it leaves the repair hanging and as a consequence it leaves a repairSessions tasks sitting active on the 'AntiEntropy Session' executor."
F161	fix sstableloader reference acquisition bug. sstableloader fails. 
F162	fix estimated row size regression. estimated row sizes regression.
F163	"make sure we don't return more columns than asked. Short reads protection results in returning more columns than asked for. When we detect a short read (in SP.fetchRows), we retry a new command created by: Quorum returns incorrect results during hinted handoff"
F164	acquire compactionlock during truncate. Truncate disregards running compactions when deleting sstables. All truncation do is `cfs.markCompacted(truncatedSSTables)` without holding any lock or anything. 
F165	"fix displaying cfdef entries for super columnfamilies. show schema fails. following command breaks ""show schema"" cli command with error ""A long is exactly 8 bytes: 5""."
F166	"revert name-based query defragmentation. Eagerly re-write data at read time.  it will be possible to implement an optimization to eagerly rewrite (""supersede"") data at read time. If a successful read needed to hit more than a certain threshold of sstables, we can eagerly rewrite it in a new sstable, and 2498 will allow only that file to be accessed. This basic approach would improve read performance considerably, but would cause a lot of duplicate data to be written, and would make compaction's work more necessary. Recursion bug in CollationController. "
F167	"fix invalidate-related test failures. invalidate / unregisterSSTables is confused. invalidate doesn't call unregisterSSTables, and vice versa, making it easy to get yourself into a situation that ""shouldn't happen."""
F168	add next-gen cqlsh to bin. cqlsh 2.0 I'd like to see some improvements to cqlsh to bring it to feature parity. cqlsh doesn't work on windows. cqlsh complains when you try to do UPDATE with counter columns.
F169	"(CQL) fix handling of rows with no columns. Selecting just the row_key returns nil instead of just the row_key.CREATE KEYSPACE CassandraCQLTestKeyspace WITH strategy_class='org.apache.cassandra.locator.SimpleStrategy' AND strategy_options:replication_factor=1 USE CassandraCQLTestKeyspace."
F170	fix querying supercolumns by name returning only a subset of subcolumns or old subcolumn versions. Problem SliceByNamesReadCommand on super column family after flush operation.
F171	"automatically compute sha1 sum for uncompressed data files. Automatically create SHA1 of new sstables. Compressed sstables have block checksums which is great but non-compressed sstables don't for technical/compatibility reasons that I'm not criticizing. It's a bit annoying because when someone comes up with a corrupted file, we really have nothing to help discarding it as bitrot or not. However, it would be fairly trivial/cheap to compute the SHA1 (or other) of whole sstables when creating them. And if it's a new, separate, sstable component, we don't even have to implement anything to check the hash. It would only be there to (manually) check for bitrot when corruption is suspected by the user, or to say check the integrity of backups."
F172	fix reading metadata/statistics component for version. SSTableMetadata deserialization works but looks broken. 
F173	add sstable forward-compatibility. Add support for sstable forwards-compatibility.
F174	report compression ratio in CFSMBean. report compression ratio in CFSMBean.(should expose in nodetool cfstats as well).
F175	"fix incorrect size exception during streaming of counters. During repair, ""incorrect data size"" & ""Connection reset"" errors. Repair unable to complete."
F176	(CQL) fix for counter decrement syntax. Counter decrements require a space around the minus sign but not around the plus sign. 
F177	Fix race introduced by CASSANDRA-2503. Flush Assertion Error - CF size changed during serialization.
F178	Fix incomplete deletion of delivered hints. Hinted handoff not working after rolling upgrade. While testing rolling upgrades from 0.8.7 to 1.0.2 on a test cluster I've noticed that hinted hand-off didn't always work properly. Hints generated on an upgraded node does not seem to be delivered to other newly upgraded nodes once they rejoin the ring. They only way I've found to get a node to deliver its hints is to restart it.
F179	"Avoid rescheduling compactions when no compaction was executed. Bizarre Compaction Manager Behaviour. t seems the CompactionManager has gotten itself into a bad state. My 1.0.2 node has been up for 20 hours now - checking via JMX, the compaction manager is reporting that it has completed 14,797,412,000 tasks. Yep, thats right 14 billion tasks and increasing at a rate of roughly 208,400/second."
F180	fix handling of the chunk_length_kb compression options. Compression option chunk_length is not converted into KB as it should.
F181	fix updating CF row_cache_provider. Not possible to change row_cache_provider on existing cf.row_cache_provider is not possible to change using update column family xyz with row_cache_provider='something' 
F182	"CFMetaData.convertToThrift method to set RowCacheProvider. Row cache provider reported wrong in cassandra-cli When doing ""show schema;"" in the CLI, the row_cache_provider is reported as ConcurrentLinkedHashCacheProvider while it really is SerializingCacheProvider"
F183	"Make counter shard merging thread safe. Counter shard merging is not thread safe. The first part of the counter shard merging process is done during counter replication. This was done there because it requires that all replica are made aware of the merging (we could only rely on nodetool repair for that but that seems much too fragile, it's better as just a safety net)."
F184	"Revert. (Hadoop) Skip rows with empty columns when slicing entire row. We have been finding that range ghosts appear in results from Hadoop via Pig. This could also happen if rows don't have data for the slice predicate that is given. This leads to having to do a painful amount of defensive checking on the Pig side, especially in the case of range ghosts. (Hadoop) skip empty rows when entire row is requested, redux. "
F185	Fix bug preventing the use of efficient cross-DC writes. Actually uses efficient cross DC writes. 
F186	"describe ring` command for CLI . add describe_ring to cli. Lately I have found the describe_ring feature was needed to debug/analyze issue, but the cli does not have this available."
F187	fix self-hinting of timed out read repair updates and make hinted handoff less prone to OOMing a coordinator. local writes timing out cause attempt to hint to self. 
F188	expose bloom filter sizes via JMX. capture BloomFilter memory size in Cassandra (JMX)
F189	enforce RP tokens 0..2**127. Move allows you to move to tokens > 2**127 Currently you can move to tokens greater than what should be the max token in RP.
F190	"canonicalize paths exposed through JMX. Storage paths exposed in JMX should be absolute/canonical. The data, commitlog, and saved caches directories are exposed through JMX. However, what's exposed is just exactly what's in the config file. This can be ambiguous in some cases."
F191	"fix ""liveSize"" stat when sstables are removed. Load from `nodetool ring` does not update after cleanup. "
F192	add bloom filter FP rates to nodetool cfstats. include bloomfilter stats in nodeCmd output
F193	record partitioner in sstable metadata component. Changing partitioner causes interval tree build failure before the change can be detected. 
F194	add new upgradesstables nodetool command. Create a nodetool upgrade_sstables to avoid using scrubs for tasks it wasn't intended to.
F195	skip --debug requirement to see common exceptions in CLI. requiring --debug to see stack traces for failures in cassandra-cli is a terrible idea (aka silent failure is never a valid option)
F196	fix incorrect query results due to invalid max timestamp. Incorrect query results due to invalid SSTable.maxTimestamp. 
F197	"make sstableloader recognize compressed sstables. sstableloader throwing exceptions when loading snapshot data from compressed CFs. Loaded data from snapshot then enabled `sstable_compression: org.apache.cassandra.io.compress.SnappyCompressor` Then flush, scrub and compact. I can see actual CompressionRatio in JMX Console and access my data without problems..Now I snapshot compressed keyspace and when trying to load snapshot to another single node or different Keyspace (the same super CF structure with compression options enabled, even try to truncate snapshoted CFs.) I cant retrieve any records ."
F198	"avoids race in OutboundTcpConnection in multi-DC setups. Header class not thread safe, but mutated by multiple threads. "
F199	"use SETLOCAL in cassandra.bat cassandra.bat does not use SETLOCAL, can cause classpath issues"
F200	fix ConcurrentModificationException in Table.all() ConcurrentModificationException in Table.all()
F201	fix concurrence issue in the FailureDetector. ConcurrentModificationException in FailureDetector
F202	fix array out of bounds error in counter shard removal. CounterColumnFamily Compaction error (ArrayIndexOutOfBoundsException). 
F203	"void dropping tombstones when they might still be needed to shadow data in a different sstable. After a minor compaction, deleted key-slices are visible again."
F204	revert Wrong check of partitioner for secondary indexes. doesn't handle the fact that secondary indexes have a specific partitioner (LocalPartitioner).
F205	fix assertion error while forwarding writes to local nodes. Assertion error when forwarding to local nodes. Started a rolling upgrade from 1.0.3 to 1.0.4 now all boxes are constantly spitting out this assert
F206	"(CQL) fix cqlsh support for replicate_on_write. cqlsh: DESCRIBE output for a columnfamily does not work as input to same C* instance. The DESCRIBE COLUMNFAMILY cqlsh command produces output that is intended to be usable as valid CQL (at least, when given to another Cassandra instance of the same version). But the output yields errors when run: So it needs to do a better job of determining which CF attributes are valid for which C* versions."
F207	fix adding to leveled manifest after streaming. Assertion error during bootstraping cassandra. 
F208	"filter out unavailable cipher suites when using encryption. Counter shard merging is not thread safe. The first part of the counter shard merging process is done during counter replication. This was done there because it requires that all replica are made aware of the merging (we could only rely on nodetool repair for that but that seems much too fragile, it's better as just a safety net)."
F209	"(HADOOP) add old-style api support for CFIF and CFRR. Implement old style api support for ColumnFamilyInputFormat and ColumnFamilyRecordReader. For better compatibility with hadoop, I would like to add old style hadoop support (mapred) to the ColumnFamilyInputFormat and ColumnFamilyRecordReader."
F210	"Support TimeUUIDType column names in Stress.java tool. Support timeuuid column names. Real-world Cassandra applications often use ""wide rows"" to denormalize queries into. Most often, this means they do a lot of appending to existing rows, with few overwrites. An easy way to add this to Stress would be to allow specifying timeuuid column names (which will be inherently sequential, or nearly so)."
F211	(CQL) INSERT/UPDATE/DELETE/TRUNCATE commands should allow CF names to be qualified by keyspace. CQL queries should allow CF names to be qualified by keyspace
F212	always remove endpoints from delevery queue in HH. Hinted handoffs isn't delivered if/when HintedHandOffManager ends up in invalid state.
F213	"fix race between cf flush and its 2ndary indexes flush. Race between cf flush and its secondary indexes flush. When a CF with indexes is flushed, it's indexes are flushed too. In particular their memtable is switched, but without making the old memtable frozen. This can conflict with a concurrent flush of the index itself"
F214	fix potential race in AES when a repair fails. NPE in AntiEntropyService$RepairSession.completed(). 
F215	ix default value validation usage in CLI SET command. value validator in the cli does not pick up. 
F216	Optimize componentsFor method for compaction and startup time. Compaction cleanupIfNecessary costly when many files in data dir. From what I can tell SSTableWriter.cleanupIfNecessary seems increasingly costly as the number of files in the data dir increases.
F217	"(CQL) Proper ColumnFamily metadata validation on CREATE COLUMNFAMILY. CQL CF creation skips most of the validation code. Most validation is done by ThriftValidation.validateCfDef, which we call from QP when creating an index but not on CF creation."
F218	"fix compression ""chunk_length_kb"" option to set correct kb value for thrift/avro. Compression chunk_length_kb is not correctly returned for thrift/avro. fixed the interpretation of chunk_length_kb as a size in bytes but infortunately forgot to convert it back to kb when returning it for thrift/avro. In particular, this means that a describe cf would return things like chunk_length_kb: 65535."
F219	"fix missing response during range slice repair. Timeout exception for quorum reads after upgrade from 1.0.2 to 1.0.5  For some column families always got TimeoutException. I turned on debug and increase rpc_timeout to 1 minute, but still got timeout. I believe it is bug on 1.0.5."
F220	"describe ring' moved from CLI to nodetool and available through JMX. add describe_ring to cli. Lately I have found the describe_ring feature was needed to debug/analyze issue, but the cli does not have this available."
F221	add back partitioner to sstable metadata. Wrong check of partitioner for secondary indexes. doesn't handle the fact that secondary indexes have a specific partitioner (LocalPartitioner). 
F222	fix NPE in get_count for counters. get_count NullPointerException with counters. get_count doesn't currently work for counter columns or super counter columns. The fix seems to be pretty simple.
F223	"remove invalid assertion that table was opened before dropping it. Don't assume the Table instance has been open when dropping a keyspace. DropKeyspace assumes that the Table had been open (rather, it checks that Table.clear() don't return null). It has been seen however that in the case of a fat client (the sstableloader in that case, but it would be true for any fat client) the Table may not have been open. Let's just remove that assertion."
F224	"range and index scans now only send requests to enough replicas to satisfy requested CL + RR. Index Scan's will span across multiple DC's. Looks like we send requests to all the nodes provided by StorageService.instance.getLiveNaturalEndpoints(keyspace, range.right); We dont filter it based on blockedFor (Consistency levels)."
F225	use cannonical host for local node in nodetool info. nodetool info reports inaccurate datacenter/rack for localhost. The datacenter & rack information provided by 'nodetool info' is incorrect when using 'nodetool -h localhost info'. This is because the IP address passed to the EndpointSnitch to determine the datacenter & rack is sourced from the host parameter provided to nodetool and not the actual endpoint address used in the ring.
F226	remove nonlocal DC write optimization since it only worked with CL.ONE or CL.LOCAL_QUORUM. TimeoutException When using QuorumEach or ALL consistency on Multi-DC. Intermittent exceptions seen in cassandra 1.0.5 during Reads.
F227	detect misuses of CounterColumnType. Can create a Column Family with comparator CounterColumnType which is subsequently unusable. It's probably the case that this shouldn't be allowed at all but one is currently allowed to create a Column Family with comparator CounterColumnType which then appears unusable. CREATE COLUMNFAMILY comparator_cf_counter (id text PRIMARY KEY) WITH comparator=CounterColumnType
F228	"turn off string interning in json2sstable, take 2. json2sstable fails due to OutOfMemory. I have a json file created with sstable2json for a column family of super column type. Its size is about 1.9GB. (It's a dump of all keys because I cannot find out how to specify keys to dump in sstable2json.)"
F229	"validate compression parameters on add/update of the ColumnFamily. When Snappy compression is not available on the platform, trying to enable it introduces problems. I've tried to enable compression for some column families in my cluster using Snappy compression."
F230	Increase vm.max_map_count in debian packaging. Packaging should increase vm.max_map_count to accommodate leveled compaction. 
F231	"gossiper will never add itself to saved endpoints. Gossiper.addSavedEndpoint should never add itself. Somehow, people are running into a situation where nodes are adding themselves to the persisted ring cache. Since SS is initialized after the Gossiper and calls addSavedEndpoint on it, which inits the nodes with a generation of zero, this ends up with nodes using a generation of zero and thus never being marked as alive."
F232	"fix regression in HH page size calculation. Hinted Handoff - related OOM. One of our nodes had collected alot of hints for another node, so when the dead node came back and the row mutations were read back from disk, the node died with an OOM-exception (and kept dying after restart, even with increased heap (from 8G to 12G)). The heap dump contained alot of SuperColumns and our application does not use those (but HH does)."
F233	"retry failed stream on IOException.Streaming retry is no longer performed. changed exception handling when processing incoming stream, but since it wraps all exception into RuntimeException, streaming retry which had been occurred when IOException is thrown no longer works."
F234	"allow configuring bloom_filter_fp_chance. BloomFilter FP ratio should be configurable or size-restricted some other way. When you have a live dc and purely analytical dc, in many situations you can have less nodes on the analytical side, but end up getting restricted by having the BloomFilters in-memory, even though you have absolutely no use for them. It would be nice if you could reduce this memory requirement by tuning the desired FP ratio, or even just disabling them altogether."
F235	"attempt hint delivery every ten minutes, or when failure detector notifies us that a node is back up, whichever comes first.  Hint handoff throttle delay default changed to 1ms, from 50. Hints are not replayed unless node was marked down. If B drops a write from A because it is overwhelmed (but not dead), A will hint the write. But it will never get notified that B is back up (since it was never down), so it will never attempt hint delivery."
F236	add nodetool setstreamthroughput. make stream throttling configurable at runtime with nodetool. 
F237	"fix assertion when dropping a columnfamily with no sstables. Fatal exception in thread Thread[MigrationStage:1,5,main] (LeveledCompaction). "
F238	"more efficient allocation of small bloom filters. OpenBitSet can allocate more bytes than it needs. changed OpenBitSet to break big long arrays into pages. However, it always allocate full pages, each page being of size 4096 * 8 bytes. This means that we almost always allocate too much bytes, and for a row that has 1 column, the associated row bloom filter allocates 32760 more bytes than it should."
F239	"CLibrary.createHardLinkWithExec() to check for errors. Should check for errors when calling /bin/ln. It looks like cassandra.utils.CLibrary.createHardLinkWithExec() does not check for any errors in the execution of the hard-link-making utility. This could be bad if, for example, the user has put the snapshot directory on a different filesystem from the data directory. The hard linking would fail and the sstable snapshots would not exist, but no error would be reported."
F240	Avoid creating empty and non cleaned writer during compaction. Temp SSTable and file descriptor leak. 
F241	"stop thrift service in shutdown hook so we can quiesce MessagingService. ThreadPoolExecutor creates threads as non-daemon and will block on shutdown by default. This is most obviously visible in OptionalTasks which should not block shutdown, but often does."
F242	"(CQL) compaction_strategy_options and compression_parameters for CREATE COLUMNFAMILY statement. CQL can't create column with compression or that use leveled compaction. Looking at CreateColumnFamilyStatement.java, it doesn't seem CQL can create compressed column families, nor define a compaction strategy."
F243	"Reset min/max compaction threshold when creating size tiered compaction strategy. Changing compaction strategy from Leveled to SizeTiered logs millions of messages about nothing to compact. When column family compaction strategy is changed from Leveled to SizeTiered and there're Leveled compaction tasks pending, Cassandra starting to flood in logs with thousands per sec messages:"
F244	Don't ignore IOException during compaction. NPE when running upgradesstables
F245	Fix assertion error for CF with gc_grace=0. AssertionError in hintedhandoff - 1.0.5 
F246	Shutdown ParallelCompaction reducer executor after use. Unsustainable Thread Accumulation in ParallelCompactionIterable.Reducer ThreadPoolExecutor
F247	Avoid < 0 value for pending tasks in leveled compaction. strange values of pending tasks with compactionstats (below 0)
F248	(Hadoop) Support TimeUUID in Pig CassandraStorage. Support TimeUUID in CassandraStorage
F249	Check schema is ready before continuing boostrapping. Bootstrapping nodes don't ensure schema is ready before continuing
F250	"Catch overflows during parsing of chunk_length_kb. parsing of chunk_length_kb silently overflows. Not likely to trigger for ""real"" values; I noticed because some other bug caused the chunk length setting to be corrupted somehow and take on some huge value having nothing to do with what I asked for in my schema update (not yet identified why; separate issue)."
F251	"Improve stream protocol mismatch errors. correct and improve stream protocol mismatch error. The message (and code comment) claims it got a ""newer"" version despite the fact that the check only determines that it is non-equal. Fix that, and also print the actual version gotten and expected."
F252	"Avoid multiple thread doing HH to the same target. Multiple threads can attempt hint handoff to the same target. HintedHandOffManager attempts to prevent multiple threads sending hints to the same target with the queuedDeliveries set, but the code is buggy. If two handoffs do occur concurrently, the second thread can use an arbitrarily large amount of memory skipping tombstones when it starts paging from the beginning of the hint row, looking for the first live hint. (This is not a problem with a single thread, since it always pages starting with the last-seen hint column name, effectively skipping the tombstones. Then it compacts when it's done.)"
F253	Add JMX property for rp_timeout_in_ms. Make rpc_timeout_in_ms into a jmx mbean property
F254	Allow DynamicCompositeType to compare component of different types. Do something about DynamicCompositeType. 
F255	Flush non-cfs backed secondary indexes. Flush non-cfs backed secondary indexes along with CF
F256	Secondary Indexes should report memory consumption. Secondary index should report it's memory consumption
F257	fix for SelectStatement start/end key are not set correctly when a key alias is involved. SelectStatement start/end key are not set correctly when a key alias is involved
F258	fix CLI `show schema` command insert of an extra comma in column_metadata. Show Schema; inserts an extra comma in column_metadata
F259	avoid logging (harmless) exception when GC takes < 1ms GC can take 0 ms
F260	"prevent new nodes from thinking down nodes are up forever. Nodes can get stuck in UP state forever, despite being DOWN"
F261	use correct list of replicas for LOCAL_QUORUM reads when read repair is disabled. Adding another datacenter's node results in 0 rows returned on first datacenter.
F262	"block on flush before compacting hints (may prevent OOM) Once a host has been hinted to, log messages for it repeat every 10 mins even if no hints are delivered"
F263	fix race between cleanup and flush on secondary index CFSes. Can't cleanup after I moved a token.
F264	"avoid including non-queried nodes in rangeslice read repair. Unnecessary ReadRepair request during RangeScan. During reading with Quorum level and replication factor greater then 2, Cassandra sends at least one ReadRepair, even if there is no need to do that."
F265	Only snapshot CF being compacted for snapshot_before_compaction. snapshot-before-compaction snapshots entire keyspace. Should only snapshot the CF being compacted
F266	Log active compactions in StatusLogger. log Compaction Active tasks in StatusLogger instead of n/a. currently StatusLogger log:
F267	"Compute more accurate compaction score per level. [patch] allow compaction score to be a floating pt value. compaction score is computed with integer math, making the need for compaction under reported. Use floating pt math instead."
F268	Return InvalidRequest when using a keyspace that doesn't exist. cqlsh doesn't error out immediately for use of invalid keyspace. 
F269	disallow user modification of System keyspace. sstable2json doesn't work for secondary index sstable due to partitioner mismatch. sstable2json doesn't work for secondary index sstable in 1.0.6 while it worked in version 0.8.x.
F270	allow using sstable2json on secondary index data. sstable2json doesn't work for secondary index sstable due to partitioner mismatch. sstable2json doesn't work for secondary index sstable in 1.0.6 while it worked in version 0.8.x.
F271	(cqlsh) add DESCRIBE COLUMNFAMILIES. Add new SHOW command in CQL shell to list column families. add command SHOW COLUMN FAMILIES to list all column families in a current keyspace by name.
F272	(cqlsh) format blobs correctly and use colors to improve output readability. cqlsh and cassandra-cli show keys differently for data created via stress tool. 
F273	synchronize BiMap of bootstrapping tokens.InvocationTargetException ConcurrentModificationException at startup
F274	"show index options in CLI. It's useful to show actual index options if any on `describe <ks/cf>` or `show keyspaces`, that was already added to `show schema`."
F275	"add optional socket timeout for streaming. Repair Streaming hangs between multiple regions. Streaming hangs between datacenters, though there might be multiple reasons for this, a simple fix will be to add the Socket timeout so the session can retry."
F276	"fix truncate not to leave behind non-CFS backed secondary indexes. Truncate leaves behind non-CFS backed secondary indexes. If you setup a CF with a non-cfs backed secondary index then trucate it, nothing happens to the secondary index. we need a hook for CFStore to clean these up."
F277	"make CLI `show schema` to use output stream directly instead of StringBuilder. Make CLI `show schema` output data into the file as well is display it to user. Primary use-case for `show schema` is to persist current schema to load it later (possibly on the other machines), so if we output it into timestamped file this would make a good bonus in usability."
F278	remove the wait on hint future during write. Internal error processing batch_mutate: java.util.ConcurrentModificationException on CounterColumn. Cassandra throws an exception below while performing batch_mutate with counter column insertion mutation to increment column with 1
F279	(cqlsh) ignore missing CfDef opts.  ./bin/cqlsh `describe keyspace <keyspace>` command doesn't work when ColumnFamily row_cache_provider wasn't specified.
F280	"(cqlsh) look for cqlshlib relative to realpath . cqlsh is missing cqlshlib (ImportError: No module named cqlshlib). After a clean install of Cassandra, when running cqlsh I get the following erro"
F281	"Fix short read protection. Short read protection is broken. When a read needs to do more than one retry (due to short reads), the originalCount is not preserved by the retry leading to returning more than the requested number of columns."
F282	Make sure infered and actual schema match . Cassandra inferred schema and actual data don't match. 
F283	Fix NPE during HH delivery. NPE during HH delivery when gossip turned off on target. 
F284	Don't put boostrapping node in 'hibernate' status . Its impossible to removetoken joining down node. 
F285	"Hadoop Fix bad validator lookup. [patch] fix bad validator lookup. code looks up an entry in a map by a byte[] even tho the map is keyed by ByteBuffer, add a ByteBuffer.wrap call to the key."
F286	Fix soft reset in EC2MultiRegionSnitch. FB.broadcastAddress fixes and Soft reset on Ec2MultiRegionSnitch.reconnect. looks like OutboundTcpConnectionPool.reset will clear the queue which might not be ideal for Ec2Multiregion snitch. there is additional cleanup needed for FB.broadCastAddress.
F287	Don't leave zombie connections with THSHA thrift server. Disablethrift and Enablethrift can leaves behind zombie connections on THSHA server. While doing nodetool disable thrift we disable selecting threads and close them... but the connections are still active
F288	"(cqlsh) fix deserialization of data. cqlsh: handle situation where data can't be deserialized as expected. When cqlsh tries to deserialize data which doesn't match the expected type (either because the validation type for the column/key alias was changed, or ASSUME has been used), it just fails completely and in most cases won't show any results at all. When there is only one misbehaving value out of a large number, this can be frustrating."
F289	Fix removetoken force causing an inconsistent state . nodetool removetoken force causes an inconsistent state. 
F290	"Fix ahndling of some types with Pig. Pig can't store some types after loading them.  we removed the decompose methods in putNext instead relying on objToBB, however it cannot sufficiently handle all types."
F291	Don't allow to drop the system keyspace. [patch] don't allow dropping the system keyspace. throw an IRE if user attempts to drop system keyspace
F292	Make Pig deletes disabled by default and configurable. Make Pig/CassandraStorage delete functionality disabled by default and configurable. there is a way to delete column with the CassandraStorage loadstorefunc. In practice it is a bad idea to have that enabled by default. A scenario: do an outer join and you don't have a value for something and then you write out to cassandra all of the attributes of that relation.
F293	(Pig) fix CassandraStorage to use correct comparator in Super ColumnFamily case. CassandraStorage uses comparator for both super column names and sub column names. The CassandraStorage class uses the same comparator for super and sub column names.
F294	"fix thread safety issues in commitlog replay, primarily affecting systems with many (100s) of CF definitions. Possible livelock during commit log playback. In CommitLog.recover, there seems to be the possibility of concurrent inserts to tablesRecovered (a HashSet) in the Runnables instantiated a bit below (line 323 in 1.0.7). "
F295	"Fix relevant tombstone ignored with super columns. SuperColumn may ignore relevant tombstones. QueryFilter.isRelevant() consider that a super column that is gc-able but contains only non-gcable tombstone is irrelevant (if the tombstone timestmap is greater than the super column timestamp, which is almost implied by the fact that the tombstone are non-gcable while the SC is)."
F296	improve index sampling performance. Improve BloomFilter deserialization performance. It seems as though 1.0.7 loads the BloomFilter through a series of reading longs out in a multithreaded process while 0.8.7 reads the entire object.
F297	"always compact away deleted hints immediately after handoff. HintedHandoff won't compact a single sstable, resulting in repeated log messages. "
F298	delete hints from dropped ColumnFamilies on handoff instead of erroring out. Hints Should Be Dropped When Missing CFid Implies Deleted ColumnFamily
F299	add CompositeType ref to the CLI doc for create/update column family. Cli should be able to define CompositeType comparators. 
F300	Pig: support Counter ColumnFamilies. Pig CounterColumnFamily support. 
F301	Pig: Composite column support. Composite Column Support for PIG.
F302	Avoid NPE during repair when a keyspace has no CFs. NullPointerException in org.apache.cassandra.service.AntiEntropyService when repair finds a keyspace with no CFs
F303	Fix division-by-zero error on get_slice. Division by zero on get_slice.
F304	"don't change manifest level for cleanup, scrub, and upgradesstables operations under LeveledCompactionStrategy. nodetool cleanup/scrub/upgradesstables promotes all sstables to next level (LeveledCompaction). nodetool cleanup giving exception."
F305	fix race leading to super columns assertion failure. Supercolumn serialization assertion failure.
F306	fix NPE on invalid CQL delete command. NPE on invalid CQL DELETE command.
F307	"allow custom types in CLI's assume command. Issue with cassandra-cli ""assume"" command and custom types"
F308	fix totalBytes count for parallel compactions. parallel compaction hang (on large rows?). compaction type keyspace column family bytes compacted bytes total progress.
F309	fix intermittent NPE in get_slice. Internal error processing get_slice (NullPointerException). 
F310	"remove unnecessary asserts in native code interfaces. mlockall() returned code is ignored w/o assertions. We log that mlockall() was successful only based on the lack of an assertion failure, so for anyone running w/o -ea we are lying about mlockall() succeeding."
F311	Validate blank keys in CQL to avoid assertion errors. CQL inserting blank key.
F312	"cqlsh: fix bad decoding of some column names. cqlsh still failing to handle decode errors in some column names.Columns which are expected to be text, but which are not valid utf8, cause cqlsh to display an error and not show any output:"
F313	cqlsh: fix incorrect padding with unicode chars. cqlsh: double wide unicode chars cause incorrect padding in select output
F314	"Fix EC2 snitch incorrectly reporting region. EC2 snitch incorrectly reports regions. Currently the org.apache.cassandra.locator.Ec2Snitch reports ""us-west"" in both the oregon and the california data centers. This is incorrect, since they are different regions."
F315	"Shut down thrift during decommission. decom should shut thrift down. If you decom a node an then try to use it, you get nothing but timeouts. Instead let's just kill thrift so intelligent clients can move along."
F316	Expose nodetool cfhistograms for 2ndary indexes. Expose nodetool cfhistograms for secondary index CFs. 
F317	Fix ConcurrentModificationException in gossiper. java.util.ConcurrentModificationException in Gossiper
F318	"fix maxTimestamp to include row tombstones. check most recent TS values in SSTables when a row tombstone has already been encountered. once C* comes across a row tombstone, C* should check the TS on the tombstone against all SSTables. If the most recent TS in an SST is older than the row tombstone, that entire SST (or the remainder of it) can be safely ignored."
F319	"avoid streaming empty files with bulk loader if sstablewriter errors out. BulkRecordWriter shouldn't stream any empty data/index files that might be created at end of flush. If by chance, we flush sstables during BulkRecordWriter (we have seen it happen), I want to make sure we don't try to stream them."
F320	support PropertyFileSnitch in bulk loader. NullPointerException when using sstableloader with PropertyFileSnitch configured. 
F321	add auto_snapshot option allowing disabling snapshot before drop/truncate. Add a configuration option to disable snapshots. It gives cassandra the ability to permanently delete data at a large scale without any means of recovery. 
F322	allow short snitch names. update snitch documentation.
F323	cqlsh: guess correct version of Python for Arch Linux. cqlsh can't handle python being a python3. cqlsh fails to run when python is a Python 3
F324	(CLI) properly handle quotes in create/update keyspace commands. Cannot create keyspace with specific keywords through cli. Keyspaces cannot be create when the keyspace name which are used as keywords. 
F325	Avoids possible deadlock during bootstrap. isReadyForBootstrap doesn't compare schema UUID by timestamp as it should
F326	fix stress tool that hangs forever on timeout or error. stress tool hangs forever on timeout or error. The stress tool hangs forever if it encounters a timeout or exception.
F327	Fix super columns bug where cache is not updated. Apparent data loss using super columns and row cache via ConcurrentLinkedHashCacheProvider.
F328	stress tool to return appropriate exit code on failure. stress tool return a non-zero value when it fails. 
F329	"fix compaction NPE when out of disk space and assertions disabled. Ensure a directory is selected for Compaction.  CompactionTask.execute() checks if there is a valid compactionFileLocation only if partialCompactionsAcceptable() . upgradesstables results in a CompactionTask with userdefined set, so the valid location check is not performed."
F330	add populate_io_cache_on_flush option. make cache skipping optional. We've applied this patch locally in order to turn of page skipping; not completely but only for compaction/repair situations where it can be directly detrimental in the sense of causing data to become cold even though your entire data set fits in memory.
F331	allow larger cache capacities than 2GB. Allow larger cache capacities than 2GB. The problem is that capacity is a Integer which can maximum hold 2 GB
F332	add getsstables command to nodetool. There should be an easy way to find out which sstables a key lives in. 
F333	apply parent CF compaction settings to secondary index CFs. 2I CFs should inherit parent compaction settings
F334	preserve commitlog size cap when recycling segments at startup. Preserve commitlog size cap when recycling segments at startup
F335	(Hadoop) fix split generation regression. Bug in SSTableReader.getSampleIndexesForRanges(...) causes uneven InputSplits generation for Hadoop mappers. 
F336	"ignore min/max compactions settings in LCS, while preserving behavior that min=max=0 disables autocompaction. overlapping sstables in leveled compaction strategy"
F337	log number of rows read from saved cache. LOGGING: Info log is not displaying number of rows read from saved cache at startup
F338	calculate exact size required for cleanup operations. Improve pre-cleanup estimate of disk space required
F339	"avoid blocking additional writes during flush when the commitlog gets behind temporarily. CFS.maybeSwitchMemtable() calls CommitLog.instance.getContext(), which may block, under flusher lock write lock"
F340	"enable caching on index CFs based on data CF cache setting. Index caching. Currently, the ""hidden"" CFs backing secondary indexes are created with Caching.NONE, which can result in slower-than-expected index queries."
F341	"warn on invalid replication strategy creation options. when creating keyspace with simple strategy, it should only acception ""replication_factor"" as an option."
F342	remove [Freeable]Memory finalizers. Improve serializing off-heap cache by not using finalizers. 
F343	"include tombstone size in ColumnFamily.size, which can prevent OOM during sudden mass delete operations by yielding a nonzero liveRatio. OOMs because delete operations are not accounted."
F344	Open 1 sstableScanner per level for leveled compaction. OOM Exception during repair session with LeveledCompactionStrategy.
F345	Optimize reads when row deletion timestamps allow us to restrict the set of sstables we check. check most recent TS values in SSTables when a row tombstone has already been encountered
F346	add support for commitlog archiving and point-in-time recovery. Streaming CommitLog backup
F347	avoid generating redundant compaction tasks during streaming. Unnecessary compaction happens when streaming.
F348	"add -cf option to nodetool snapshot, and takeColumnFamilySnapshot to StorageService mbean. nodeprobe snapshot to support specific column families"
F349	optimize cleanup to drop entire sstables where possible. Check SSTable range before running cleanup. 
F350	optimize truncate when autosnapshot is disabled. Optimize truncate when snapshots are disabled or keyspace not durable.
F351	update caches to use byte[] keys to reduce memory overhead. KeyCacheKey and RowCacheKey to use raw byte[].
F352	add column limit to cli. cassandra-cli list <CF> limit number of columns returned. Listing wide-rows from CLI crashes Cassandra.
F353	"clean up and optimize DataOutputBuffer, used by CQL compression and CompositeType. Clean up DataOutputBuffer."
F354	optimize commitlog checksumming. Checksum improvement for CommitLog.
F355	"identify and blacklist corrupted SSTables from future compactions. During Compaction, Corrupt SSTables with rows that cause failures should be identified and blacklisted."
F356	Move CfDef and KsDef validation out of thrift. Move CfDef and KsDef validation to CFMetaData and KSMetaData.
F357	Expose API to repair a user provided range. repair user provided custom token range (support incremental repair controlled by external agent)
F358	Add way to force the cassandra-cli to refresh its schema. Add way to force the cassandra-cli to refresh it's schema
F359	Avoid having replicate on write tasks stacking up at CL.ONE. Avoids having replicate on write tasks stacking up at CL.ONE
F360	(cql3) Backwards compatibility for composite comparators in non-cql3-aware clients. schema_* CFs do not respect column comparator which leads to CLI commands failure.
F361	(cql3) Fix order by for reversed queries. ORDER BY ... DESC reverses comparrison predicates in WHERE
F362	(cql3) Add ReversedType support. Add support for ReversedType
F363	(cql3) Add timeuuid type. CQL3: improve experience with time uuid
F364	(cql3) Minor fixes. Minor CQL3 fixes
F365	"(cql3) Fix prepared statement in BATCH. CQL 3.0 prepare_cql_query fails on ""BEGIN BATCH"""
F366	(cql3) Reduce the list of reserved keywords. CQL3: make some keywords unreserved
F367	(cql3) Move max/min compaction thresholds to compaction strategy options. CQL3: move {max/min}_compaction_thresholds to compaction options
F368	Fix exception during move when localhost is the only source. Move error on 1 node cluster
F369	(cql3) Allow paging through non-ordered partitioner results. Allow paging through non-ordered partitioner results in CQL3
F370	(cql3) Fix drop index. CQL3: fix index dropping and assign default name if none provided at index creation.
F371	(cql3) Don't return range ghosts anymore. Explore not returning range ghosts
F372	fix re-creating Keyspaces/ColumnFamilies with the same name as dropped ones. Problem with creating keyspace after drop.
F373	fix SecondaryIndex LeveledManifest save upon snapshot. Deleting a CF always produces an error and that CF remains in an unknown state
F374	fix missing arrayOffset in FBUtilities.hash Missing arrayOffset in FBUtilities.hash
F375	(cql3) Add name of parameters in CqlResultSet. Name of parameters should be available in CqlPreparedResult
F376	(cql3) Correctly validate order by queries. cql3 ORDER BY not ordering
F377	rename stress to cassandra-stress for saner packaging. Include stress tool in debian packaging
F378	Fix exception on colum metadata with non-string comparator. Setting column metadata for non-string comparator CFs breaks
F379	Check for unknown/invalid compression options. Validate compression parameters
F380	(cql3) Adds simple access to column timestamp and ttl. Easy access to column timestamps (and maybe ttl) during queries
F381	(cql3) Fix range queries with secondary indexes. CQL3 range query with secondary index fails.
F382	Better error messages from improper input in cli. Cassandra-cli returns 'command not found' instead of syntax error
F383	Try to stop all compaction upon Keyspace or ColumnFamily drop. Error while deleting a columnfamily that is being compacted.
F384	(cql3) Allow keyspace properties to contain hyphens. Can't specify certain keyspace properties in CQL
F385	(cql3) Correctly validate keyspace access in create table. CQL3: create table don't always validate access to the right keyspace
F386	Avoid deadlock in migration stage. avoid distributed deadlock in migration stage
F387	Take supercolumn names and deletion info into account in memtable throughput. live ratio limit 64.0 is way too low
F388	Add back backward compatibility for old style replication factor. Upgrading encounters: 'SimpleStrategy requires a replication_factor strategy option.' and refuses to start
F389	Preserve compatibility with pre-1.1 index queries. 1.1 does not preserve compatibility w/ index queries against 1.0 nodes
F390	Fix cleanup not deleting index entries. cleanup optimization can delete data but not corresponding index entries
F391	Use correct partitioner when saving + loading caches. sstable2json error
F392	Check schema before trying to export sstable. NPE in sstable2json. 
F393	Raise a meaningful exception instead of NPE when PFS encounters an unconfigured node + no default. PFS should give a friendlier error message when a node has not been configured
F394	fix bug in sstable blacklisting with LCS. fix sstable blacklisting for LCS
F395	LCS no longer promotes tiny sstables out of L0. Small SSTable Segments Can Hurt Leveling Process
F396	skip tombstones during hint replay. Assertion error while delivering the hints.
F397	fix NPE in compactionstats. Nodetool compactionstats fails with NullPointerException
F398	enforce 1m min keycache for auto. enforce 1m min keycache for auto
F399	Have DeletedColumn.isMFD always return true. isMarkedForDelete can return false if it is a few seconds in the future. 
F400	"(cql3) exeption message for ORDER BY constraints said primary filter can be an IN clause, which is misleading. ex msg for cql3 order by constraints says primary filter can be an IN clause which is misleading"
F401	(cql3) Reject (not yet supported) creation of 2ndardy indexes on tables with composite primary keys. CQL client timeout when inserting data after creating index
F402	Set JVM stack size to 160k for java 7. Oracle Java 1.7 u4 does not allow Xss128k. 
F403	cqlsh: add COPY command to load data from CSV flat files. Load-from-flat-file data import tool. 
F404	CFMetaData.fromThrift to throw ConfigurationException upon error. no error propagated to client when updating a column family with an invalid column def
F405	Use CF comparator to sort indexed columns in SecondaryIndexManager. Use CF comparator to sort indexed columns in SecondaryIndexManager
F406	add strategy_options to the KSMetaData.toString() output. it'd be great to print the strategyOptions map in the KSMetatData.toString
F407	(cql3) fix range queries containing unqueried results. CQL3 Range Query contains unwanted results with composite columns
F408	(cql3) allow updating column_alias types. Allow updating column_alias types
F409	(cql3) Fix deletion bug. cql delete does not delete
F410	Fix computation of overlapping sstable for leveled compaction. stackoverflow building interval tree & possible sstable corruptions
F411	Improve scrub and allow to run it offline. stackoverflow building interval tree & possible sstable corruptions
F412	Fix assertionError in StorageService.bulkLoad. bulkLoad() method in StorageService throws AssertionError
F413	(cqlsh) add option to authenticate to a keyspace at startup. Add an option to cqlsh to authenticate to a keyspace by default
F414	(cqlsh) fix ASSUME functionality. cqlsh: ASSUME functionality broken by CASSANDRA-4198 fix
F415	Fix ColumnFamilyRecordReader to not return progress > 100% ColumnFamilyRecordReader can report progress > 100%
F416	(cqlsh) add COPY TO add COPY TO
F417	munmap commitlog segments before rename. Data insertion fails because of commitlog rename failure
F418	(JMX) rename getRangeKeySample to sampleKeyRange to avoid returning multi-MB results as an attribute. remove RangeKeySample from attributes in jmx
F419	"flush based on data size, not throughput; overwritten columns no longer artificially inflate liveRatio"
F420	"update default commitlog segment size to 32MB and total commitlog size to 32/1024 MB for 32/64 bit JVMs, respectively. Humor 32bit JVMs"
F421	avoid using global partitioner to estimate ranges in index sstables. cleanup uses global partitioner to estimate ranges in index sstables
F422	restore pre-CASSANDRA-3862 approach to removing expired tombstones from row cache during compaction. Compaction invalidates row cache
F423	(stress) support for CQL prepared statements. update stress to support prepared statements
F424	Correctly catch exception when Snappy cannot be loaded. Correctly catch exception when Snappy cannot be loaded
F425	(cql3) Support ORDER BY when IN condition is given in WHERE clause. Sorting results when using IN()
F426	"(cql3) delete ""component_index"" column on DROP TABLE call. Possible schema corruption with cql 3.0"
F427	change nanoTime() to currentTimeInMillis() in schema related code. Change nanoTime() to currentTimeInMillis() in schema related code.
F428	add a token generation tool. Add a token generator to standard tools
F429	Fix LCS bug with sstable containing only 1 row. Assertion with LCS compaction
F430	"fix ""Can't Modify Index Name"" problem on CF update. Updating column family using cassandra-cli results in ""Cannot modify index name"""
F431	Fix assertion error in getOverlappingSSTables during repair. AssertionError in ColumnFamilyStore.getOverlappingSSTables() during repair
F432	fix nodetool's setcompactionthreshold command. Nodetool fail to setcompactionthreshold
F433	"Ensure compacted files are never used, to avoid counter overcount. Counters in columns don't preserve correct values after cluster restart"
F434	fix offline scrub to catch >= out of order rows. Assertion with LCS compaction
F435	fix cassandra-env.sh on RHEL and other non-dash-based systems. nodetool can't work at all !
F436	add SecondaryIndex.reload API. Any SecondaryIndex implementation can be reloaded following config changes
F437	"use millis + atomicint for commitlog segment creation instead of nanotime, which has issues under some hypervisors. Ensure unique commit log file names"
F438	"fix FD leak in slice queries. Strange permament socket descriptors increasing leads to ""Too many open files"""
F439	avoid recursion in leveled compaction. StackOverflowError in LeveledCompactionStrategy$LeveledScanner.computeNext
F440	increase stack size under Java7 to 180K
F441	Log(info) schema changes. Log(info) schema changes.
F442	Change nodetool setcachecapcity to manipulate global caches. Change nodetool setcachecapcity to manipulate global caches
F443	(cql3) fix setting compaction strategy. Impossible to set LeveledCompactionStrategy to a column family.
F444	fix broken system.schema_* timestamps on system startup. update column family fails
F445	fix wrong skip of cache saving. Multithreaded cache saving can skip caches
F446	Avoid NPE when lost+found is in data dir. lost+found directory in the data dir causes problems again
F447	Respect five-minute flush moratorium after initial CL replay. Respect five-minute flush moratorium after initial CL replay
F448	Adds ntp as recommended in debian packaging. Add Recommends: ntp to Debian packages
F449	Configurable transport in CF Record{Reader|Writer}. Configurable transport in CF RecordReader / RecordWriter
F450	(cql3) fix potential NPE with both equal and unequal restriction. NPE when trying to select a slice from a composite table
F451	(cql3) improves ORDER BY validation. ORDER BY validation is not restrictive enough
F452	Fix potential deadlock during counter writes. Dead lock in mutation stage when many concurrent writes to few columns
F453	Fix cql error with ORDER BY when using IN. cql error with ORDER BY when using IN
F454	Wait for writes on synchronous read digest mismatch. Digest mismatch doesn't wait for writes as intended
F455	fix commitlog replay for nanotime-infected sstables. Commitlog not replayed after restart
F456	preflight check ttl for maximum of 20 years. Setting TTL to Integer.MAX causes columns to not be persisted.
F457	(Pig) fix widerow input with single column rows. CassandraStorage.getNextWide produces corrupt data
F458	"Fix HH to compact with correct gcBefore, which avoids wiping out undelivered hints. HintedHandoff fails to deliver hints after first repaired node"
F459	LCS will merge up to 32 L0 sstables as intended. leveled compaction does less work in L0 than intended
F460	NTS will default unconfigured DC replicas to zero. NPE in NTS when using LQ against a node (DC) that doesn't have replica
F461	use default consistency level in counter validation if none is explicitly provided. cql 2 counter validations need to use default consistencylevel if none is explicitly given
F462	Improve IAuthority interface by introducing fine-grained access permissions and grant/revoke commands. Compaction error with Cassandra 1.1.4 and LCS
F463	fix assumption error in CLI when updating/describing keyspace. Error in CLI when updating keyspace
F464	Adds offline sstablescrub to debian packaging. Add offline scrub to debian package
F465	Automatic fixing of overlapping leveled sstables. Compaction error with Cassandra 1.1.4 and LCS
F466	fix error when using ORDER BY with extended selections. Log error when using IN together with ORDER BY
F467	(CQL3) Fix validation for IN queries for non-PK cols. (CQL3) Missing validation for IN queries on column not part of the PK
F468	fix re-created keyspace disappering after 1.1.5 upgrade. Keyspace disappears when upgrading node from cassandra-1.1.1 to cassandra-1.1.5. Drop keyspace causes schema disagreement
F469	(CLI) display elapsed time in 2 fraction digits. Increase precision of elapsed time in casandra-cli
F470	add authentication support to sstableloader. bin/sstableloader should support authentication
F471	Fix CQL3 'is reversed' logic. CQL3 predicate logic is reversed when used on a reversed column. CQL3 Predicate logic bug when using composite columns
F472	(CQL3) Don't return ReversedType in result set metadata. cqlsh fails to format values of ReversedType-wrapped classes
F473	Backport adding AlterKeyspace statement. Add AlterKeyspace statement
F474	(CQL3) Correcty accept upper-case data types. (CQL3) data type not in lowercase are not handled correctly.
F475	Add binary protocol events for schema changes. Binary protocol: inform clients of schema changes
F476	cqlsh: improve COPY FROM performance. improve cqlsh COPY FROM performance
F477	add basic authentication support for Pig CassandraStorage. Implement authentication in Pig loadFunc
F478	"fix CQL2 ALTER TABLE compaction_strategy_class altering. in cqlsh, alter table with compaction_strategy_class does nothing"
F479	reset getRangeSlice filter after finishing a row for get_paged_slice. StorageProxy.getRangeSlice sometimes returns incorrect number of columns
F480	expunge row cache post-truncate. Truncate doesn't clear row cache
F481	remove IAuthority2. Revert IAuthority2 interface
F482	add get[Row|Key]CacheEntries to CacheServiceMBean. Include number of entries in CachedService
F483	fix get_paged_slice to wrap to next row correctly. Broken get_paged_slice
F484	fix indexing empty column values. AssertionError: keys must not be empty
F485	allow JdbcDate to compose null Date objects. JdbcDate.compose is not null safe
F486	fix possible stackoverflow when compacting 1000s of sstables. StackOverflowError in CompactionExecutor thread
F487	fix wrong leveled compaction progress calculation. Compaction progress counts more than 100%
F488	add a close() method to CRAR to prevent leaking file descriptors. Add a close() method to CRAR to prevent leaking file descriptors.
F489	fix potential infinite loop in get_count. get_count with 'count' param between 1024 and ~actual column count fails
F490	fix compositeType.{get/from}String methods. DateType in Column MetaData causes server crash
F491	(CQL) fix CREATE COLUMNFAMILY permissions check. CQL2 CREATE COLUMNFAMILY checks wrong permission
F492	Fix DynamicCompositeType same type comparison. Duplicate column names with DynamicCompositeType
F493	Fix duplicate SSTable reference when stream session failed. Failed streaming may cause duplicate SSTable reference
F494	Allow static CF definition with compact storage. CQL3 doesn't allow static CF definition with compact storage in C* 1.1
F495	Fix endless loop/compaction of schema_* CFs due to broken timestamps. Endless loop flushing+compacting system/schema_keyspaces and system/schema_columnfamilies
F496	"Fix 'wrong class type' assertion in CounterColumn. ""AssertionError: Wrong class type"" at CounterColumn.diff()"
F497	Fix cqlsh timestamp formatting of timezone info. cqlsh timestamp formatting is broken - displays wrong timezone info (at least on Ubuntu)
F498	Fix assertion failure with leveled compaction. assertion failure in leveled compaction test
F499	Check for null end_token in get_range_slice. Wrong assumption for KeyRange about range.end_token in get_range_slices().
F500	Remove all remnants of removed nodes. remnants of removed nodes remain after removal
F501	Add aut-reloading of the log4j file in debian package. Debian packaging doesn't do auto-reloading of log4j properties file
F502	Fix estimated row cache entry size. Estimated Row Cache Entry size incorrect (always 24?)
F503	reset getRangeSlice filter after finishing a row for get_paged_slice. StorageProxy.getRangeSlice sometimes returns incorrect number of columns
F504	fix temporarily missing schema after upgrade from pre-1.1.5. Upgraded cassandra loses all cfs on restart
F505	reduce log spam from invalid counter shards. Reduce log spam from counter shard warnings
F506	Improve schema propagation performance. Schema push/pull race
F507	Fall back to old describe_splits if d_s_ex is not available. CFRR wide row iterators improvements
F508	"Improve error reporting when streaming ranges fail. RangeStreamer has no way to report failures, allowing bootstrap/move etc to complete without data"
F509	cqlsh: fix timestamp formatting on some platforms. cqlsh doesn't show correct timezone when SELECTing a column of type TIMESTAMP
F510	"Fix ALTER TABLE overriding compression options with defaults. After changing the compaction strategy, compression_strategy always returning back to the ""SnappyCompressor"" through CQL 2.2.0. Compression params validation assumes SnappyCompressor"
F511	Avoid error opening data file on startup. error opening data file at startup
F512	"Fix wrong index_options in cli 'show schema'. ""show schema"" command in cassandra-cli generates wrong ""index_options"" values."
F513	Allow overriding number of available processor. Allow property override of available processors value
F514	Simplify CompressedRandomAccessReader to work around JDK FD bug. Major compaction IOException in 1.1.8
F515	Improve handling a changing target throttle rate mid-compaction. Changing from higher to lower compaction throughput causes long (multi hour) pause in large compactions
F516	fix multithreaded compaction deadlock. HintsColumnFamily compactions hang when using multithreaded compaction
F517	fix specifying and altering crc_check_chance. not possible to change crc_check_chance
F518	Don't expire columns sooner than they should in 2ndary indexes. Compaction deletes ExpiringColumns in Secondary Indexes
F519	Pig: correctly decode row keys in widerow mode. CassandraStorage doesn't decode name in widerow mode
F520	nodetool repair command now prints progress. Need some indication of node repair success or failure
F521	fix user defined compaction to run against 1.1 data directory. user defined compaction is broken
F522	Fix CQL3 BATCH authorization caching. CQL3 BATCH authorization caching bug
F523	"fix get_count returns incorrect value with TTL. Since 1.1, get_count sometimes returns value smaller than actual column count"
F524	better handling for amid compaction failure. Make sure SSTables left over from compaction get deleted and logged
F525	calculate pending ranges asynchronously. calculatePendingRanges could be asynchronous
F526	fix saved key cache not loading at startup. Saved key cache is not loaded when opening ColumnFamily
F527	fix ConcurrentModificationException in getBootstrapSource. ConcurrentModificationException in getBootstrapSource
F528	fix sstable maxtimestamp for row deletes and pre-1.1.1 sstables. max client timestamp
F529	fix start key/end token validation for wide row iteration. word count example fails with InvalidRequestException(why:Start key's token sorts after end token)
F530	add ConfigHelper support for Thrift frame and max message sizes. o.a.c.hadoop.ConfigHelper should support setting Thrift frame and max message sizes.
F531	fix nodetool repair not fail on node down. Repair command should report error when replica node is dead
F532	"always collect tombstone hints. CLONE - Once a host has been hinted to, log messages for it repeat every 10 mins even if no hints are delivered"
F533	Fix thread growth on node removal. Unbounded (?) thread growth connecting to an removed node
F534	Fix error when sourcing file in cqlsh. Error when executing a file contains CQL statement in cqlsh
F535	Make Ec2Region's datacenter name configurable. Make Ec2Region's datacenter name configurable
F536	Fix trying to load deleted row into row cache on startup. Nodes Don't Restart: Assertion Error on Serializing Cache provider
F537	Update offline scrub for 1.0 -> 1.1 directory structure. Offline scrub does not migrate the directory structure on migration from 1.0.x to 1.1.x and causes the keyspace to disappear
F538	add tmp flag to Descriptor hashcode. CFS.scrubDataDirectories tries to delete nonexistent orphans
F539	"fix logging of ""Found table data in data directories"" when only system tables are present. DatabaseDescriptor.hasExistingNoSystemTables return true even with only system keyspace"
F540	cli: Add JMX authentication support. cassandra-cli doesn't support JMX authentication.
F541	nodetool: ability to repair specific range. Provide a nodetool command to repair subranges
F542	Fix possible assertion triggered in SliceFromReadCommand. Possible assertion triggered in SliceFromReadCommand
F543	cqlsh: Add inet type support on Windows (ipv4-only). inet datatype does not work with cqlsh on windows
F544	Fix race when initializing ColumnFamilyStore. Fix ColumnFamily opening race
F545	Add UseTLAB JVM flag. Enable ThreadLocal allocation in the JVM
F546	cli: Quote ks and cf names in schema output when needed. cassandra-cli should escape keyspace name
F547	Fix bad default for min/max timestamp in SSTableMetadata. Broken default values for min/max timestamp
F548	Fix cf name extraction from manifest in Directories.migrateFile(). Directories.migrateFile() does not handle -old or -tmp LDB manifests 
F549	Support pluggable internode authentication. Pluggable security feature to prevent node from joining a cluster and running destructive commands
F550	Replace mistaken usage of commons-logging with slf4j. use slf4j not commons-logging
F551	Remove buggy thrift max message length option. thrift_max_message_length_in_mb makes long-lived connections error out
F552	Add retry mechanism to OTC for non-droppable_verbs. Add retry mechanism to OTC for non-droppable_verbs
F553	Use allocator information to improve memtable memory usage estimate. Use allocator information to improve memtable memory usage estimate
F554	fsync leveled manifest to avoid corruption. Manifest file not fsynced
F555	Fix Bound intersection computation. intersects the bounds not right
F556	Fix NPE in Pig's widerow mode. CassandraStorage throws NullPointerException (NPE) when widerows is set to 'true' 
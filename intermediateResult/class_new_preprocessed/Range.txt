licens apach softwar foundat contributor licens agreement file distribut work addit inform regard copyright ownership licens file apach licens version licens file complianc licens obtain copi licens http www apach org licens requir applic law agre write softwar distribut licens distribut express impli licens specif languag govern permiss limit licens packag org apach cassandra dht import java serializ import java util import org apach common lang object util import org apach cassandra row posit import org apach cassandra servic storag servic import org apach cassandra util pair represent rang node respons ring rang respons token left partition map reduc token rang scan public class rang extend ring posit extend abstract bound implement compar rang serializ public static final long serial version public rang left left storag servic partition public rang left partition partition super left partition public static extend ring posit boolean left point wrap left wrap interv case hold ani token return true return true return fals point compar left return true els return compar point els rang return point compar left compar point public boolean rang left equal full ring alway rang return true boolean thiswrap wrap left boolean thatwrap wrap left thiswrap thatwrap return left compar left compar els thiswrap wrap wrap token wrap segment return left compar left compar els thatwrap wrap wrap return fals determin point ring rang question param point point question return true point rang els fals public boolean point return left point param rang check intersect return true rang intersect rang public boolean intersect rang return intersect size public boolean intersect abstract bound implement cleanup compact membership test onli rang bound support instanceof rang return intersect rang instanceof bound return intersect bound throw unsupport oper intersect onli support bound rang object class param rang check intersect return true rang intersect rang public boolean intersect bound return intersect rang left public static extend ring posit set rang rang set rang rang return collect unmodifi set hash set rang array list rang public static extend ring posit set rang rang set rang rang return collect singleton rang param return intersect rang disjoint rang wrap node queri rang intersect intersect empti list return public set rang intersect rang return rang set return rang set boolean thiswrap wrap left boolean thatwrap wrap left thiswrap thatwrap wrap straightforward case left compar left compar return collect empti set return rang set rang object util max left left object util min partition thiswrap thatwrap start alreadi rule assert left equal left wrap rang alway intersect sinc alreadi determin case mirror imag case endpoint lie segment onli start endpoint lie segment case left segement handl swap return left compar left intersect wrap intersect wrap thiswrap thatwrap return intersect wrap assert thiswrap thatwrap return intersect wrap privat static extend ring posit set rang intersect wrap rang rang set rang intersect hash set rang compar left intersect add rang left partition intersect add rang left partition return collect unmodifi set intersect privat static extend ring posit set rang intersect wrap rang wrap rang set rang intersect hash set rang wrap intersect add rang left wrap wrap partition extra compareto becaus rang asymmetr wrap left wrap rang wrap left wrap left compar intersect add rang wrap left wrap partition return collect unmodifi set intersect public pair abstract bound abstract bound split posit assert posit left equal posit check split effect rang posit equal left posit equal return null abstract bound rang left posit partition abstract bound rang posit partition return pair creat public list rang unwrap min valu partition min valu class wrap equal min valu return array list list rang unwrap array list rang unwrap add rang left min valu partition unwrap add rang min valu partition return unwrap rang wrap public static extend ring posit boolean wrap left return left compar public int compar rang rhs rang repres pointer wrap smaller wrap left return wrap rhs left rhs return return compar rhs subtract portion rang param rang subtract total rang return array list rang left subtract privat array list rang subtract rang array list rang differ array list rang left equal left differ add rang left left partition equal differ add rang partition return differ public set rang subtract rang rhs return rhs differ fetch calcul set differ rang rang current rhs node fetch move token param rhs rang calcul differ return set differ rang public set rang differ fetch rang rhs set rang result set rang intersect set intersect rhs intersect set empti result hash set rang result add rhs els rang intersect rang intersect set size intersect set array intersect intersect length result hash set rang rhs subtract intersect els intersect length rang intersect rang intersect array list rang temp rhs subtract becaus intersect subtract onli yield singl rang rang singl temp result hash set rang singl subtract return result public static extend ring posit boolean rang token iter rang rang assert rang null rang rang rang rang token return true return fals overrid public boolean equal object instanceof rang return fals rang rhs rang return left equal rhs left equal rhs overrid public string string return left protect string open string return protect string close string return public list string list array list string ret array list string ret add left string ret add string return ret public boolean wrap return wrap left return copi list rang unwrap sort left bound overlap bound merg public static extend ring posit list rang normal collect rang rang unwrap list rang output array list rang rang size rang rang rang output add rang unwrap sort left collect sort output compar rang public int compar rang rang return left compar left deoverlap return deoverlap output list unwrap rang sort left posit return equival list rang overlap rang privat static extend ring posit list rang deoverlap list rang rang rang empti return rang list rang output array list rang iter rang iter rang iter rang current iter min current partition min valu current left class iter current goe ring current equal min rang full rang return onli current left equal min return collect rang singleton list current output add rang current left min return output rang iter left equal current intersect replac legit sinc avoid special case result optim rang transform left compar current overlap handl current equal min alreadi equal min current compar current rang current left els output add current current output add current return output comput rang key correspond rang token public static rang row posit row rang token left token partition partition return rang row posit left max key bound partition max key bound partition partition public abstract bound row posit row bound return left instanceof token row rang token left token partition rang row posit public abstract bound token token bound return left instanceof row posit rang token row posit left token row posit token partition rang token public abstract bound return rang left 
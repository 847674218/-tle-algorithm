<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.2.1\src\java\org\apache\cassandra\cql3\statements\AlterKeyspaceStatement.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>cql3</name>.<name>statements</name></name>;</package>

<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>auth</name>.<name>Permission</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>config</name>.<name>DatabaseDescriptor</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>config</name>.<name>KSMetaData</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>config</name>.<name>Schema</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>cql3</name>.<name>KSPropDefs</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>db</name>.<name>Table</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>exceptions</name></name>.*;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>locator</name>.<name>AbstractReplicationStrategy</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>service</name>.<name>ClientState</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>service</name>.<name>MigrationManager</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>service</name>.<name>StorageService</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>transport</name>.<name>messages</name>.<name>ResultMessage</name></name>;</import>

<class><specifier>public</specifier> class <name>AlterKeyspaceStatement</name> <super><extends>extends <name>SchemaAlteringStatement</name></extends></super>
<block>{
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>name</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>KSPropDefs</name></type> <name>attrs</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>AlterKeyspaceStatement</name><parameter_list>(<param><decl><type><name>String</name></type> <name>name</name></decl></param>, <param><decl><type><name>KSPropDefs</name></type> <name>attrs</name></decl></param>)</parameter_list>
    <block>{
        <expr_stmt><expr><call><name>super</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>name</name></name> = <name>name</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>attrs</name></name> = <name>attrs</name></expr>;</expr_stmt>
    }</block></constructor>

    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name>String</name></type> <name>keyspace</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>name</name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>checkAccess</name><parameter_list>(<param><decl><type><name>ClientState</name></type> <name>state</name></decl></param>)</parameter_list> <throws>throws <argument><expr><name>UnauthorizedException</name></expr></argument>, <argument><expr><name>InvalidRequestException</name></expr></argument></throws>
    <block>{
        <expr_stmt><expr><call><name><name>state</name>.<name>hasKeyspaceAccess</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name><name>Permission</name>.<name>ALTER</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name>void</name></type> <name>validate</name><parameter_list>(<param><decl><type><name>ClientState</name></type> <name>state</name></decl></param>)</parameter_list> <throws>throws <argument><expr><name>RequestValidationException</name></expr></argument></throws>
    <block>{
        <expr_stmt><expr><call><name><name>super</name>.<name>validate</name></name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>KSMetaData</name></type> <name>ksm</name> <init>= <expr><call><name><name>Schema</name>.<name>instance</name>.<name>getKSMetaData</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr><name>ksm</name> == null</expr>)</condition><then>
            <throw>throw <expr>new <call><name>InvalidRequestException</name><argument_list>(<argument><expr>"Unknown keyspace " + <name>name</name></expr></argument>)</argument_list></call></expr>;</throw></then></if>
        <if>if <condition>(<expr><call><name><name>ksm</name>.<name>name</name>.<name>equalsIgnoreCase</name></name><argument_list>(<argument><expr><name><name>Table</name>.<name>SYSTEM_KS</name></name></expr></argument>)</argument_list></call></expr>)</condition><then>
            <throw>throw <expr>new <call><name>InvalidRequestException</name><argument_list>(<argument><expr>"Cannot alter system keyspace"</expr></argument>)</argument_list></call></expr>;</throw></then></if>

        <expr_stmt><expr><call><name><name>attrs</name>.<name>validate</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <if>if <condition>(<expr><call><name><name>attrs</name>.<name>getReplicationStrategyClass</name></name><argument_list>()</argument_list></call> == null &amp;&amp; !<call><name><name>attrs</name>.<name>getReplicationOptions</name></name><argument_list>()</argument_list></call>.<call><name>isEmpty</name><argument_list>()</argument_list></call></expr>)</condition><then>
        <block>{
            <throw>throw <expr>new <call><name>ConfigurationException</name><argument_list>(<argument><expr>"Missing replication strategy class"</expr></argument>)</argument_list></call></expr>;</throw>
        }</block></then>
        <else>else <if>if <condition>(<expr><call><name><name>attrs</name>.<name>getReplicationStrategyClass</name></name><argument_list>()</argument_list></call> != null</expr>)</condition><then>
        <block>{
            <comment type="line">// trial run to let ARS validate class + per-class options</comment>
            <expr_stmt><expr><call><name><name>AbstractReplicationStrategy</name>.<name>createReplicationStrategy</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>,
                                                                  <argument><expr><call><name><name>AbstractReplicationStrategy</name>.<name>getClass</name></name><argument_list>(<argument><expr><call><name><name>attrs</name>.<name>getReplicationStrategyClass</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
                                                                  <argument><expr><call><name><name>StorageService</name>.<name>instance</name>.<name>getTokenMetadata</name></name><argument_list>()</argument_list></call></expr></argument>,
                                                                  <argument><expr><call><name><name>DatabaseDescriptor</name>.<name>getEndpointSnitch</name></name><argument_list>()</argument_list></call></expr></argument>,
                                                                  <argument><expr><call><name><name>attrs</name>.<name>getReplicationOptions</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if></else></if>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>announceMigration</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>RequestValidationException</name></expr></argument></throws>
    <block>{
        <decl_stmt><decl><type><name>KSMetaData</name></type> <name>ksm</name> <init>= <expr><call><name><name>Schema</name>.<name>instance</name>.<name>getKSMetaData</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <comment type="line">// In the (very) unlikely case the keyspace was dropped since validate()</comment>
        <if>if <condition>(<expr><name>ksm</name> == null</expr>)</condition><then>
            <throw>throw <expr>new <call><name>InvalidRequestException</name><argument_list>(<argument><expr>"Unknown keyspace " + <name>name</name></expr></argument>)</argument_list></call></expr>;</throw></then></if>

        <expr_stmt><expr><call><name><name>MigrationManager</name>.<name>announceKeyspaceUpdate</name></name><argument_list>(<argument><expr><call><name><name>attrs</name>.<name>asKSMetadataUpdate</name></name><argument_list>(<argument><expr><name>ksm</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier>public</specifier> <name><name>ResultMessage</name>.<name>SchemaChange</name>.<name>Change</name></name></type> <name>changeType</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name><name>ResultMessage</name>.<name>SchemaChange</name>.<name>Change</name>.<name>UPDATED</name></name></expr>;</return>
    }</block></function>
}</block></class>
</unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.2.1\src\java\org\apache\cassandra\cql\AbstractModification.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>cql</name></name>;</package>

<import>import <name><name>java</name>.<name>nio</name>.<name>ByteBuffer</name></name>;</import>
<import>import <name><name>java</name>.<name>util</name>.<name>List</name></name>;</import>

<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>db</name>.<name>IMutation</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>db</name>.<name>ConsistencyLevel</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>exceptions</name>.<name>InvalidRequestException</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>exceptions</name>.<name>UnauthorizedException</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>thrift</name>.<name>ThriftClientState</name></name>;</import>

<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>AbstractModification</name>
<block>{
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>ConsistencyLevel</name></type> <name>defaultConsistency</name> <init>= <expr><name><name>ConsistencyLevel</name>.<name>ONE</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name>String</name></type> <name>keyspace</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name>String</name></type> <name>columnFamily</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name>ConsistencyLevel</name></type> <name>cLevel</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name>Long</name></type> <name>timestamp</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name>int</name></type> <name>timeToLive</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name>String</name></type> <name>keyName</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>AbstractModification</name><parameter_list>(<param><decl><type><name>String</name></type> <name>keyspace</name></decl></param>, <param><decl><type><name>String</name></type> <name>columnFamily</name></decl></param>, <param><decl><type><name>String</name></type> <name>keyAlias</name></decl></param>, <param><decl><type><name>Attributes</name></type> <name>attrs</name></decl></param>)</parameter_list>
    <block>{
        <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><name>keyspace</name></expr></argument>, <argument><expr><name>columnFamily</name></expr></argument>, <argument><expr><name>keyAlias</name></expr></argument>, <argument><expr><call><name><name>attrs</name>.<name>getConsistencyLevel</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>attrs</name>.<name>getTimestamp</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>attrs</name>.<name>getTimeToLive</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <constructor><specifier>public</specifier> <name>AbstractModification</name><parameter_list>(<param><decl><type><name>String</name></type> <name>keyspace</name></decl></param>, <param><decl><type><name>String</name></type> <name>columnFamily</name></decl></param>, <param><decl><type><name>String</name></type> <name>keyAlias</name></decl></param>, <param><decl><type><name>ConsistencyLevel</name></type> <name>cLevel</name></decl></param>, <param><decl><type><name>Long</name></type> <name>timestamp</name></decl></param>, <param><decl><type><name>int</name></type> <name>timeToLive</name></decl></param>)</parameter_list>
    <block>{
        <expr_stmt><expr><name><name>this</name>.<name>keyspace</name></name> = <name>keyspace</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>columnFamily</name></name> = <name>columnFamily</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>cLevel</name></name> = <name>cLevel</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>timestamp</name></name> = <name>timestamp</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>timeToLive</name></name> = <name>timeToLive</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>keyName</name></name> = <call><name><name>keyAlias</name>.<name>toUpperCase</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <function><type><specifier>public</specifier> <name>String</name></type> <name>getKeyspace</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>keyspace</name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>String</name></type> <name>getColumnFamily</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>columnFamily</name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>ConsistencyLevel</name></type> <name>getConsistencyLevel</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr>(<name>cLevel</name> != null) ? <name>cLevel</name> : <name>defaultConsistency</name></expr>;</return>
    }</block></function>

    <comment type="block" format="javadoc">/**
     * True if an explicit consistency level was parsed from the statement.
     *
     * @return true if a consistency was parsed, false otherwise.
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isSetConsistencyLevel</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>cLevel</name> != null</expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>long</name></type> <name>getTimestamp</name><parameter_list>(<param><decl><type><name>ThriftClientState</name></type> <name>clientState</name></decl></param>)</parameter_list>
    <block>{
        <return>return <expr><name>timestamp</name> == null ? <call><name><name>clientState</name>.<name>getQueryState</name></name><argument_list>()</argument_list></call>.<call><name>getTimestamp</name><argument_list>()</argument_list></call> : <name>timestamp</name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isSetTimestamp</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>timestamp</name> != null</expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>int</name></type> <name>getTimeToLive</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>timeToLive</name></expr>;</return>
    }</block></function>

    <comment type="block" format="javadoc">/**
     * Convert statement into a list of mutations to apply on the server
     *
     * @param keyspace The working keyspace
     * @param clientState current client status
     *
     * @return list of the mutations
     *
     * @throws InvalidRequestException on the wrong request
     */</comment>
    <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name><name>List</name><argument_list>&lt;<argument><name>IMutation</name></argument>&gt;</argument_list></name></type> <name>prepareRowMutations</name><parameter_list>(<param><decl><type><name>String</name></type> <name>keyspace</name></decl></param>, <param><decl><type><name>ThriftClientState</name></type> <name>clientState</name></decl></param>, <param><decl><type><name><name>List</name><argument_list>&lt;<argument><name>ByteBuffer</name></argument>&gt;</argument_list></name></type> <name>variables</name></decl></param>)</parameter_list>
    <throws>throws <argument><expr><name>InvalidRequestException</name></expr></argument>, <argument><expr><name>UnauthorizedException</name></expr></argument></throws>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Convert statement into a list of mutations to apply on the server
     *
     * @param keyspace The working keyspace
     * @param clientState current client status
     * @param timestamp global timestamp to use for all mutations
     *
     * @return list of the mutations
     *
     * @throws InvalidRequestException on the wrong request
     */</comment>
    <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name><name>List</name><argument_list>&lt;<argument><name>IMutation</name></argument>&gt;</argument_list></name></type> <name>prepareRowMutations</name><parameter_list>(<param><decl><type><name>String</name></type> <name>keyspace</name></decl></param>, <param><decl><type><name>ThriftClientState</name></type> <name>clientState</name></decl></param>, <param><decl><type><name>Long</name></type> <name>timestamp</name></decl></param>, <param><decl><type><name><name>List</name><argument_list>&lt;<argument><name>ByteBuffer</name></argument>&gt;</argument_list></name></type> <name>variables</name></decl></param>)</parameter_list>
    <throws>throws <argument><expr><name>InvalidRequestException</name></expr></argument>, <argument><expr><name>UnauthorizedException</name></expr></argument></throws>;</function_decl>
}</block></class>
</unit>

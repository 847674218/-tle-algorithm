<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.2.1\src\java\org\apache\cassandra\net\CallbackInfo.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>net</name></name>;</package>

<import>import <name><name>java</name>.<name>net</name>.<name>InetAddress</name></name>;</import>

<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>io</name>.<name>IVersionedSerializer</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>service</name>.<name>StorageProxy</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Encapsulates the callback information.
 * The ability to set the message is useful in cases for when a hint needs 
 * to be written due to a timeout in the response from a replica.
 */</comment>
<class><specifier>public</specifier> class <name>CallbackInfo</name>
<block>{
    <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name>InetAddress</name></type> <name>target</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name>IMessageCallback</name></type> <name>callback</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name><name>MessageOut</name><argument_list>&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>sentMessage</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name><name>IVersionedSerializer</name><argument_list>&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>serializer</name></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Create CallbackInfo without sent message
     *
     * @param target target to send message
     * @param callback
     * @param serializer serializer to deserialize response message
     */</comment>
    <constructor><specifier>public</specifier> <name>CallbackInfo</name><parameter_list>(<param><decl><type><name>InetAddress</name></type> <name>target</name></decl></param>, <param><decl><type><name>IMessageCallback</name></type> <name>callback</name></decl></param>, <param><decl><type><name><name>IVersionedSerializer</name><argument_list>&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>serializer</name></decl></param>)</parameter_list>
    <block>{
        <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><name>target</name></expr></argument>, <argument><expr><name>callback</name></expr></argument>, <argument><expr>null</expr></argument>, <argument><expr><name>serializer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <constructor><specifier>public</specifier> <name>CallbackInfo</name><parameter_list>(<param><decl><type><name>InetAddress</name></type> <name>target</name></decl></param>, <param><decl><type><name>IMessageCallback</name></type> <name>callback</name></decl></param>, <param><decl><type><name><name>MessageOut</name><argument_list>&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>sentMessage</name></decl></param>, <param><decl><type><name><name>IVersionedSerializer</name><argument_list>&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>serializer</name></decl></param>)</parameter_list>
    <block>{
        <expr_stmt><expr><name><name>this</name>.<name>target</name></name> = <name>target</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>callback</name></name> = <name>callback</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>sentMessage</name></name> = <name>sentMessage</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>serializer</name></name> = <name>serializer</name></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="block" format="javadoc">/**
     * @return TRUE if a hint should be written for this target and if the CL was achieved. FALSE otherwise.
     *
     * NOTE:
     * Assumes it is only called after the write of "message" to "target" has timed out.
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>shouldHint</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>sentMessage</name> != null &amp;&amp; <call><name><name>StorageProxy</name>.<name>shouldHint</name></name><argument_list>(<argument><expr><name>target</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
}</block></class>
</unit>

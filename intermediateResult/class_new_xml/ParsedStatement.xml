<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.2.1\src\java\org\apache\cassandra\cql3\statements\ParsedStatement.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>cql3</name>.<name>statements</name></name>;</package>

<import>import <name><name>java</name>.<name>util</name>.<name>Collections</name></name>;</import>
<import>import <name><name>java</name>.<name>util</name>.<name>List</name></name>;</import>

<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>cql3</name></name>.*;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>exceptions</name>.<name>RequestValidationException</name></name>;</import>

<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>ParsedStatement</name>
<block>{
    <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>boundTerms</name></decl>;</decl_stmt>

    <function><type><specifier>public</specifier> <name>int</name></type> <name>getBoundsTerms</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>boundTerms</name></expr>;</return>
    }</block></function>

    <comment type="line">// Used by the parser and preparable statement</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setBoundTerms</name><parameter_list>(<param><decl><type><name>int</name></type> <name>boundTerms</name></decl></param>)</parameter_list>
    <block>{
        <expr_stmt><expr><name><name>this</name>.<name>boundTerms</name></name> = <name>boundTerms</name></expr>;</expr_stmt>
    }</block></function>

    <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>Prepared</name></type> <name>prepare</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>RequestValidationException</name></expr></argument></throws>;</function_decl>

    <class><specifier>public</specifier> <specifier>static</specifier> class <name>Prepared</name>
    <block>{
        <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name>CQLStatement</name></type> <name>statement</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name><name>List</name><argument_list>&lt;<argument><name>ColumnSpecification</name></argument>&gt;</argument_list></name></type> <name>boundNames</name></decl>;</decl_stmt>

        <constructor><specifier>public</specifier> <name>Prepared</name><parameter_list>(<param><decl><type><name>CQLStatement</name></type> <name>statement</name></decl></param>, <param><decl><type><name><name>List</name><argument_list>&lt;<argument><name>ColumnSpecification</name></argument>&gt;</argument_list></name></type> <name>boundNames</name></decl></param>)</parameter_list>
        <block>{
            <expr_stmt><expr><name><name>this</name>.<name>statement</name></name> = <name>statement</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>this</name>.<name>boundNames</name></name> = <name>boundNames</name></expr>;</expr_stmt>
        }</block></constructor>

        <constructor><specifier>public</specifier> <name>Prepared</name><parameter_list>(<param><decl><type><name>CQLStatement</name></type> <name>statement</name></decl></param>)</parameter_list>
        <block>{
            <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><name>statement</name></expr></argument>, <argument><expr><name><name>Collections</name>.</name>&lt;<name>ColumnSpecification</name>&gt;<call><name>emptyList</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>
    }</block></class>
}</block></class>
</unit>

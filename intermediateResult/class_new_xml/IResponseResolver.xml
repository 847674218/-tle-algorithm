<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.2.1\src\java\org\apache\cassandra\service\IResponseResolver.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>service</name></name>;</package>

<import>import <name><name>java</name>.<name>io</name>.<name>IOException</name></name>;</import>

<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>net</name>.<name>MessageIn</name></name>;</import>

<class type="interface"><specifier>public</specifier> interface <name><name>IResponseResolver</name><argument_list>&lt;<argument><name>TMessage</name></argument>, <argument><name>TResolved</name></argument>&gt;</argument_list></name> <block>{

    <comment type="block" format="javadoc">/**
     * This Method resolves the responses that are passed in . for example : if
     * its write response then all we get is true or false return values which
     * implies if the writes were successful but for reads its more complicated
     * you need to look at the responses and then based on differences schedule
     * repairs . Hence you need to derive a response resolver based on your
     * needs from this interface.
     */</comment>
    <function_decl><type><specifier>public</specifier> <name>TResolved</name></type> <name>resolve</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>DigestMismatchException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>

    <function_decl><type><specifier>public</specifier> <name>boolean</name></type> <name>isDataPresent</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * returns the data response without comparing with any digests
     */</comment>
    <function_decl><type><specifier>public</specifier> <name>TResolved</name></type> <name>getData</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>

    <function_decl><type><specifier>public</specifier> <name>void</name></type> <name>preprocess</name><parameter_list>(<param><decl><type><name><name>MessageIn</name><argument_list>&lt;<argument><name>TMessage</name></argument>&gt;</argument_list></name></type> <name>message</name></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><specifier>public</specifier> <name><name>Iterable</name><argument_list>&lt;<argument><name><name>MessageIn</name><argument_list>&lt;<argument><name>TMessage</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>getMessages</name><parameter_list>()</parameter_list>;</function_decl>
}</block></class>
</unit>

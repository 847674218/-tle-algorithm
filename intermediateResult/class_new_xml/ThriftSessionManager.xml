<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.2.1\src\java\org\apache\cassandra\thrift\ThriftSessionManager.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>thrift</name></name>;</package>

<import>import <name><name>java</name>.<name>net</name>.<name>SocketAddress</name></name>;</import>
<import>import <name><name>java</name>.<name>util</name>.<name>Map</name></name>;</import>
<import>import <name><name>java</name>.<name>util</name>.<name>concurrent</name>.<name>ConcurrentHashMap</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Encapsulates the current client state (session).
 *
 * We rely on the Thrift server to tell us what socket it is
 * executing a request for via setCurrentSocket, after which currentSession can do its job anywhere.
 */</comment>
<class><specifier>public</specifier> class <name>ThriftSessionManager</name>
<block>{
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <specifier>static</specifier> <name>ThriftSessionManager</name></type> <name>instance</name> <init>= <expr>new <call><name>ThriftSessionManager</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>ThreadLocal</name><argument_list>&lt;<argument><name>SocketAddress</name></argument>&gt;</argument_list></name></type> <name>remoteSocket</name> <init>= <expr>new <call><name><name>ThreadLocal</name><argument_list>&lt;<argument><name>SocketAddress</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>Map</name><argument_list>&lt;<argument><name>SocketAddress</name></argument>, <argument><name>ThriftClientState</name></argument>&gt;</argument_list></name></type> <name>activeSocketSessions</name> <init>= <expr>new <call><name><name>ConcurrentHashMap</name><argument_list>&lt;<argument><name>SocketAddress</name></argument>, <argument><name>ThriftClientState</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * @param socket the address on which the current thread will work on requests for until further notice
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setCurrentSocket</name><parameter_list>(<param><decl><type><name>SocketAddress</name></type> <name>socket</name></decl></param>)</parameter_list>
    <block>{
        <expr_stmt><expr><call><name><name>remoteSocket</name>.<name>set</name></name><argument_list>(<argument><expr><name>socket</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="block" format="javadoc">/**
     * @return the current session for the most recently given socket on this thread
     */</comment>
    <function><type><specifier>public</specifier> <name>ThriftClientState</name></type> <name>currentSession</name><parameter_list>()</parameter_list>
    <block>{
        <decl_stmt><decl><type><name>SocketAddress</name></type> <name>socket</name> <init>= <expr><call><name><name>remoteSocket</name>.<name>get</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <assert>assert <expr><name>socket</name> != null</expr>;</assert>

        <decl_stmt><decl><type><name>ThriftClientState</name></type> <name>cState</name> <init>= <expr><call><name><name>activeSocketSessions</name>.<name>get</name></name><argument_list>(<argument><expr><name>socket</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr><name>cState</name> == null</expr>)</condition><then>
        <block>{
            <expr_stmt><expr><name>cState</name> = new <call><name>ThriftClientState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>activeSocketSessions</name>.<name>put</name></name><argument_list>(<argument><expr><name>socket</name></expr></argument>, <argument><expr><name>cState</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <return>return <expr><name>cState</name></expr>;</return>
    }</block></function>

    <comment type="block" format="javadoc">/**
     * The connection associated with @param socket is permanently finished.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>connectionComplete</name><parameter_list>(<param><decl><type><name>SocketAddress</name></type> <name>socket</name></decl></param>)</parameter_list>
    <block>{
        <assert>assert <expr><name>socket</name> != null</expr>;</assert>
        <expr_stmt><expr><call><name><name>activeSocketSessions</name>.<name>remove</name></name><argument_list>(<argument><expr><name>socket</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
}</block></class>
</unit>

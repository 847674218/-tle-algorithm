<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.2.1\src\java\org\apache\cassandra\auth\LegacyAuthorizer.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>auth</name></name>;</package>

<import>import <name><name>java</name>.<name>util</name></name>.*;</import>

<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>exceptions</name>.<name>ConfigurationException</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>exceptions</name>.<name>InvalidRequestException</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>exceptions</name>.<name>UnauthorizedException</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Provides a transitional IAuthorizer implementation for old-style (pre-1.2) authorizers.
 *
 * Translates old-style authorize() calls to the new-style, expands Permission.READ and Permission.WRITE
 * into the new Permission values, translates the new resource hierarchy into the old hierarchy.
 * Stubs the rest of the new methods.
 * Subclass LegacyAuthorizer instead of implementing the old IAuthority and your old IAuthority implementation should
 * continue to work.
 */</comment>
<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>LegacyAuthorizer</name> <super><implements>implements <name>IAuthorizer</name></implements></super>
<block>{
    <comment type="block" format="javadoc">/**
     * @param user Authenticated user requesting authorization.
     * @param resource List of Objects containing Strings and byte[]s: represents a resource in the old hierarchy.
     * @return Set of permissions of the user on the resource. Should never return null. Use Permission.NONE instead.
     */</comment>
    <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name><name>EnumSet</name><argument_list>&lt;<argument><name>Permission</name></argument>&gt;</argument_list></name></type> <name>authorize</name><parameter_list>(<param><decl><type><name>AuthenticatedUser</name></type> <name>user</name></decl></param>, <param><decl><type><name><name>List</name><argument_list>&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>resource</name></decl></param>)</parameter_list>;</function_decl>

    <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>void</name></type> <name>validateConfiguration</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>ConfigurationException</name></expr></argument></throws>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Translates new-style authorize() method call to the old-style (including permissions and the hierarchy).
     */</comment>
    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name><name>Set</name><argument_list>&lt;<argument><name>Permission</name></argument>&gt;</argument_list></name></type> <name>authorize</name><parameter_list>(<param><decl><type><name>AuthenticatedUser</name></type> <name>user</name></decl></param>, <param><decl><type><name>IResource</name></type> <name>resource</name></decl></param>)</parameter_list>
    <block>{
        <if>if <condition>(<expr>!(<name>resource</name> instanceof <name>DataResource</name>)</expr>)</condition><then>
            <throw>throw <expr>new <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><call><name><name>String</name>.<name>format</name></name><argument_list>(<argument><expr>"%s resource is not supported by LegacyAuthorizer"</expr></argument>, <argument><expr><call><name><name>resource</name>.<name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw></then></if>
        <decl_stmt><decl><type><name>DataResource</name></type> <name>dr</name> <init>= <expr>(<name>DataResource</name>) <name>resource</name></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name><name>List</name><argument_list>&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>legacyResource</name> <init>= <expr>new <call><name><name>ArrayList</name><argument_list>&lt;<argument><name>Object</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>legacyResource</name>.<name>add</name></name><argument_list>(<argument><expr><name><name>Resources</name>.<name>ROOT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>legacyResource</name>.<name>add</name></name><argument_list>(<argument><expr><name><name>Resources</name>.<name>KEYSPACES</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if>if <condition>(<expr>!<call><name><name>dr</name>.<name>isRootLevel</name></name><argument_list>()</argument_list></call></expr>)</condition><then>
            <expr_stmt><expr><call><name><name>legacyResource</name>.<name>add</name></name><argument_list>(<argument><expr><call><name><name>dr</name>.<name>getKeyspace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
        <if>if <condition>(<expr><call><name><name>dr</name>.<name>isColumnFamilyLevel</name></name><argument_list>()</argument_list></call></expr>)</condition><then>
            <expr_stmt><expr><call><name><name>legacyResource</name>.<name>add</name></name><argument_list>(<argument><expr><call><name><name>dr</name>.<name>getColumnFamily</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

        <decl_stmt><decl><type><name><name>Set</name><argument_list>&lt;<argument><name>Permission</name></argument>&gt;</argument_list></name></type> <name>permissions</name> <init>= <expr><call><name>authorize</name><argument_list>(<argument><expr><name>user</name></expr></argument>, <argument><expr><name>legacyResource</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr><call><name><name>permissions</name>.<name>contains</name></name><argument_list>(<argument><expr><name><name>Permission</name>.<name>READ</name></name></expr></argument>)</argument_list></call></expr>)</condition><then>
            <expr_stmt><expr><call><name><name>permissions</name>.<name>add</name></name><argument_list>(<argument><expr><name><name>Permission</name>.<name>SELECT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
        <if>if <condition>(<expr><call><name><name>permissions</name>.<name>contains</name></name><argument_list>(<argument><expr><name><name>Permission</name>.<name>WRITE</name></name></expr></argument>)</argument_list></call></expr>)</condition><then>
            <expr_stmt><expr><call><name><name>permissions</name>.<name>addAll</name></name><argument_list>(<argument><expr><call><name><name>EnumSet</name>.<name>of</name></name><argument_list>(<argument><expr><name><name>Permission</name>.<name>CREATE</name></name></expr></argument>, <argument><expr><name><name>Permission</name>.<name>ALTER</name></name></expr></argument>, <argument><expr><name><name>Permission</name>.<name>DROP</name></name></expr></argument>, <argument><expr><name><name>Permission</name>.<name>MODIFY</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

        <return>return <expr><name>permissions</name></expr>;</return>
    }</block></function>

    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name>void</name></type> <name>grant</name><parameter_list>(<param><decl><type><name>AuthenticatedUser</name></type> <name>performer</name></decl></param>, <param><decl><type><name><name>Set</name><argument_list>&lt;<argument><name>Permission</name></argument>&gt;</argument_list></name></type> <name>permissions</name></decl></param>, <param><decl><type><name>IResource</name></type> <name>resource</name></decl></param>, <param><decl><type><name>String</name></type> <name>to</name></decl></param>)</parameter_list>
    <throws>throws <argument><expr><name>InvalidRequestException</name></expr></argument>, <argument><expr><name>UnauthorizedException</name></expr></argument></throws>
    <block>{
        <throw>throw <expr>new <call><name>InvalidRequestException</name><argument_list>(<argument><expr>"GRANT operation is not supported by LegacyAuthorizer"</expr></argument>)</argument_list></call></expr>;</throw>
    }</block></function>

    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name>void</name></type> <name>revoke</name><parameter_list>(<param><decl><type><name>AuthenticatedUser</name></type> <name>performer</name></decl></param>, <param><decl><type><name><name>Set</name><argument_list>&lt;<argument><name>Permission</name></argument>&gt;</argument_list></name></type> <name>permissions</name></decl></param>, <param><decl><type><name>IResource</name></type> <name>resource</name></decl></param>, <param><decl><type><name>String</name></type> <name>from</name></decl></param>)</parameter_list>
    <throws>throws <argument><expr><name>InvalidRequestException</name></expr></argument>, <argument><expr><name>UnauthorizedException</name></expr></argument></throws>
    <block>{
        <throw>throw <expr>new <call><name>InvalidRequestException</name><argument_list>(<argument><expr>"REVOKE operation is not supported by LegacyAuthorizer"</expr></argument>)</argument_list></call></expr>;</throw>
    }</block></function>

    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name>void</name></type> <name>revokeAll</name><parameter_list>(<param><decl><type><name>String</name></type> <name>droppedUser</name></decl></param>)</parameter_list>
    <block>{
    }</block></function>

    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name>void</name></type> <name>revokeAll</name><parameter_list>(<param><decl><type><name>IResource</name></type> <name>droppedResource</name></decl></param>)</parameter_list>
    <block>{
    }</block></function>

    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name><name>Set</name><argument_list>&lt;<argument><name>PermissionDetails</name></argument>&gt;</argument_list></name></type> <name>list</name><parameter_list>(<param><decl><type><name>AuthenticatedUser</name></type> <name>performer</name></decl></param>, <param><decl><type><name><name>Set</name><argument_list>&lt;<argument><name>Permission</name></argument>&gt;</argument_list></name></type> <name>permissions</name></decl></param>, <param><decl><type><name>IResource</name></type> <name>resource</name></decl></param>, <param><decl><type><name>String</name></type> <name>of</name></decl></param>)</parameter_list>
    <throws>throws <argument><expr><name>InvalidRequestException</name></expr></argument>, <argument><expr><name>UnauthorizedException</name></expr></argument></throws>
    <block>{
        <throw>throw <expr>new <call><name>InvalidRequestException</name><argument_list>(<argument><expr>"LIST PERMISSIONS operation is not supported by LegacyAuthorizer"</expr></argument>)</argument_list></call></expr>;</throw>
    }</block></function>

    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name><name>Set</name><argument_list>&lt;<argument><name>IResource</name></argument>&gt;</argument_list></name></type> <name>protectedResources</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><call><name><name>Collections</name>.<name>emptySet</name></name><argument_list>()</argument_list></call></expr>;</return>
    }</block></function>

    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name>void</name></type> <name>setup</name><parameter_list>()</parameter_list>
    <block>{
    }</block></function>
}</block></class>
</unit>

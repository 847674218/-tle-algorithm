<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.2.1\src\java\org\apache\cassandra\auth\PermissionDetails.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>auth</name></name>;</package>

<import>import <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Objects</name></name>;</import>
<import>import <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.<name>ComparisonChain</name></name>;</import>

<comment type="block" format="javadoc">/**
 *  Sets of instances of this class are returned by IAuthorizer.listPermissions() method for LIST PERMISSIONS query.
 *  None of the fields are nullable.
 */</comment>
<class><specifier>public</specifier> class <name>PermissionDetails</name> <super><implements>implements <name><name>Comparable</name><argument_list>&lt;<argument><name>PermissionDetails</name></argument>&gt;</argument_list></name></implements></super>
<block>{
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name>String</name></type> <name>username</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name>IResource</name></type> <name>resource</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name>Permission</name></type> <name>permission</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>PermissionDetails</name><parameter_list>(<param><decl><type><name>String</name></type> <name>username</name></decl></param>, <param><decl><type><name>IResource</name></type> <name>resource</name></decl></param>, <param><decl><type><name>Permission</name></type> <name>permission</name></decl></param>)</parameter_list>
    <block>{
        <expr_stmt><expr><name><name>this</name>.<name>username</name></name> = <name>username</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>resource</name></name> = <name>resource</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>permission</name></name> = <name>permission</name></expr>;</expr_stmt>
    }</block></constructor>

    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name>int</name></type> <name>compareTo</name><parameter_list>(<param><decl><type><name>PermissionDetails</name></type> <name>other</name></decl></param>)</parameter_list>
    <block>{
        <return>return <expr><call><name><name>ComparisonChain</name>.<name>start</name></name><argument_list>()</argument_list></call>
                              .<call><name>compare</name><argument_list>(<argument><expr><name>username</name></expr></argument>, <argument><expr><name><name>other</name>.<name>username</name></name></expr></argument>)</argument_list></call>
                              .<call><name>compare</name><argument_list>(<argument><expr><call><name><name>resource</name>.<name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>other</name>.<name>resource</name>.<name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
                              .<call><name>compare</name><argument_list>(<argument><expr><name>permission</name></expr></argument>, <argument><expr><name><name>other</name>.<name>permission</name></name></expr></argument>)</argument_list></call>
                              .<call><name>result</name><argument_list>()</argument_list></call></expr>;</return>
    }</block></function>

    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><call><name><name>String</name>.<name>format</name></name><argument_list>(<argument><expr>"&lt;PermissionDetails username:%s resource:%s permission:%s&gt;"</expr></argument>,
                             <argument><expr><name>username</name></expr></argument>,
                             <argument><expr><call><name><name>resource</name>.<name>getName</name></name><argument_list>()</argument_list></call></expr></argument>,
                             <argument><expr><name>permission</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name>boolean</name></type> <name>equals</name><parameter_list>(<param><decl><type><name>Object</name></type> <name>o</name></decl></param>)</parameter_list>
    <block>{
        <return>return <expr><call><name><name>Objects</name>.<name>equal</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>o</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name>int</name></type> <name>hashCode</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><call><name><name>Objects</name>.<name>hashCode</name></name><argument_list>(<argument><expr><name>username</name></expr></argument>, <argument><expr><name>resource</name></expr></argument>, <argument><expr><name>permission</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
}</block></class>
</unit>

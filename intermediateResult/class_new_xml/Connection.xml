<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.2.1\src\java\org\apache\cassandra\transport\Connection.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>transport</name></name>;</package>

<import>import <name><name>org</name>.<name>jboss</name>.<name>netty</name>.<name>channel</name>.<name>Channel</name></name>;</import>

<class><specifier>public</specifier> class <name>Connection</name>
<block>{
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>volatile</specifier> <name>FrameCompressor</name></type> <name>frameCompressor</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>volatile</specifier> <name>Channel</name></type> <name>channel</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Tracker</name></type> <name>tracker</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>Connection</name><parameter_list>(<param><decl><type><name>Tracker</name></type> <name>tracker</name></decl></param>)</parameter_list>
    <block>{
        <expr_stmt><expr><name><name>this</name>.<name>tracker</name></name> = <name>tracker</name></expr>;</expr_stmt>
    }</block></constructor>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>setCompressor</name><parameter_list>(<param><decl><type><name>FrameCompressor</name></type> <name>compressor</name></decl></param>)</parameter_list>
    <block>{
        <expr_stmt><expr><name><name>this</name>.<name>frameCompressor</name></name> = <name>compressor</name></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier>public</specifier> <name>FrameCompressor</name></type> <name>getCompressor</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>frameCompressor</name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>Tracker</name></type> <name>getTracker</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>tracker</name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>registerChannel</name><parameter_list>(<param><decl><type><name>Channel</name></type> <name>ch</name></decl></param>)</parameter_list>
    <block>{
        <expr_stmt><expr><name>channel</name> = <name>ch</name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>tracker</name>.<name>addConnection</name></name><argument_list>(<argument><expr><name>ch</name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier>public</specifier> <name>Channel</name></type> <name>channel</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>channel</name></expr>;</return>
    }</block></function>

    <class type="interface"><specifier>public</specifier> interface <name>Factory</name>
    <block>{
        <function_decl><type><specifier>public</specifier> <name>Connection</name></type> <name>newConnection</name><parameter_list>(<param><decl><type><name>Tracker</name></type> <name>tracker</name></decl></param>)</parameter_list>;</function_decl>
    }</block></class>

    <class type="interface"><specifier>public</specifier> interface <name>Tracker</name>
    <block>{
        <function_decl><type><specifier>public</specifier> <name>void</name></type> <name>addConnection</name><parameter_list>(<param><decl><type><name>Channel</name></type> <name>ch</name></decl></param>, <param><decl><type><name>Connection</name></type> <name>connection</name></decl></param>)</parameter_list>;</function_decl>
        <function_decl><type><specifier>public</specifier> <name>void</name></type> <name>closeAll</name><parameter_list>()</parameter_list>;</function_decl>
    }</block></class>
}</block></class>
</unit>

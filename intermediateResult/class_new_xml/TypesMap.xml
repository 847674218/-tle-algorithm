<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.2.1\src\java\org\apache\cassandra\cql\jdbc\TypesMap.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>cql</name>.<name>jdbc</name></name>;</package>

<import>import <name><name>java</name>.<name>util</name>.<name>HashMap</name></name>;</import>
<import>import <name><name>java</name>.<name>util</name>.<name>Map</name></name>;</import>

<class><specifier>public</specifier> class <name>TypesMap</name>
<block>{
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <specifier>static</specifier> <name><name>Map</name><argument_list>&lt;<argument><name>String</name></argument>, <argument><name><name>AbstractJdbcType</name><argument_list>&lt;<argument><name>?</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>map</name> <init>= <expr>new <call><name><name>HashMap</name><argument_list>&lt;<argument><name>String</name></argument>, <argument><name><name>AbstractJdbcType</name><argument_list>&lt;<argument><name>?</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr>static
    <block>{
        <expr><call><name><name>map</name>.<name>put</name></name><argument_list>(<argument><expr>"org.apache.cassandra.db.marshal.AsciiType"</expr></argument>, <argument><expr><name><name>JdbcAscii</name>.<name>instance</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>map</name>.<name>put</name></name><argument_list>(<argument><expr>"org.apache.cassandra.db.marshal.BooleanType"</expr></argument>, <argument><expr><name><name>JdbcBoolean</name>.<name>instance</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>map</name>.<name>put</name></name><argument_list>(<argument><expr>"org.apache.cassandra.db.marshal.BytesType"</expr></argument>, <argument><expr><name><name>JdbcBytes</name>.<name>instance</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>map</name>.<name>put</name></name><argument_list>(<argument><expr>"org.apache.cassandra.db.marshal.CounterColumnType"</expr></argument>, <argument><expr><name><name>JdbcCounterColumn</name>.<name>instance</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>map</name>.<name>put</name></name><argument_list>(<argument><expr>"org.apache.cassandra.db.marshal.DateType"</expr></argument>, <argument><expr><name><name>JdbcDate</name>.<name>instance</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>map</name>.<name>put</name></name><argument_list>(<argument><expr>"org.apache.cassandra.db.marshal.DecimalType"</expr></argument>, <argument><expr><name><name>JdbcDecimal</name>.<name>instance</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>map</name>.<name>put</name></name><argument_list>(<argument><expr>"org.apache.cassandra.db.marshal.DoubleType"</expr></argument>, <argument><expr><name><name>JdbcDouble</name>.<name>instance</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>map</name>.<name>put</name></name><argument_list>(<argument><expr>"org.apache.cassandra.db.marshal.FloatType"</expr></argument>, <argument><expr><name><name>JdbcFloat</name>.<name>instance</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>map</name>.<name>put</name></name><argument_list>(<argument><expr>"org.apache.cassandra.db.marshal.Int32Type"</expr></argument>, <argument><expr><name><name>JdbcInt32</name>.<name>instance</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>map</name>.<name>put</name></name><argument_list>(<argument><expr>"org.apache.cassandra.db.marshal.InetAddressType"</expr></argument>, <argument><expr><name><name>JdbcInetAddress</name>.<name>instance</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>map</name>.<name>put</name></name><argument_list>(<argument><expr>"org.apache.cassandra.db.marshal.IntegerType"</expr></argument>, <argument><expr><name><name>JdbcInteger</name>.<name>instance</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>map</name>.<name>put</name></name><argument_list>(<argument><expr>"org.apache.cassandra.db.marshal.LexicalUUIDType"</expr></argument>, <argument><expr><name><name>JdbcLexicalUUID</name>.<name>instance</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>map</name>.<name>put</name></name><argument_list>(<argument><expr>"org.apache.cassandra.db.marshal.LongType"</expr></argument>, <argument><expr><name><name>JdbcLong</name>.<name>instance</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>map</name>.<name>put</name></name><argument_list>(<argument><expr>"org.apache.cassandra.db.marshal.TimeUUIDType"</expr></argument>, <argument><expr><name><name>JdbcTimeUUID</name>.<name>instance</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>map</name>.<name>put</name></name><argument_list>(<argument><expr>"org.apache.cassandra.db.marshal.UTF8Type"</expr></argument>, <argument><expr><name><name>JdbcUTF8</name>.<name>instance</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>map</name>.<name>put</name></name><argument_list>(<argument><expr>"org.apache.cassandra.db.marshal.UUIDType"</expr></argument>, <argument><expr><name><name>JdbcUUID</name>.<name>instance</name></name></expr></argument>)</argument_list></call></expr>;
    }</block>

    public static <name><name>AbstractJdbcType</name><argument_list>&lt;<argument><name>?</name></argument>&gt;</argument_list></name> <call><name>getTypeForComparator</name><argument_list>(<argument><expr><name>String</name> <name>comparator</name></expr></argument>)</argument_list></call>
    <block>{
        <comment type="line">// If not fully qualified, assume it's the short name for a built-in.</comment>
        <if>if <condition>(<expr>(<name>comparator</name> != null) &amp;&amp; (!<call><name><name>comparator</name>.<name>contains</name></name><argument_list>(<argument><expr>"."</expr></argument>)</argument_list></call>)</expr>)</condition><then>
            <return>return <expr><call><name><name>map</name>.<name>get</name></name><argument_list>(<argument><expr>"org.apache.cassandra.db.marshal." + <name>comparator</name></expr></argument>)</argument_list></call></expr>;</return></then></if></block></expr></expr_stmt>
        <return>return <expr><call><name><name>map</name>.<name>get</name></name><argument_list>(<argument><expr><name>comparator</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></class>
}
</unit>

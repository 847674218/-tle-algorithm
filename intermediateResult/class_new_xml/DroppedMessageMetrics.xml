<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.2.1\src\java\org\apache\cassandra\metrics\DroppedMessageMetrics.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>metrics</name></name>;</package>

<import>import <name><name>java</name>.<name>util</name>.<name>concurrent</name>.<name>TimeUnit</name></name>;</import>

<import>import <name><name>com</name>.<name>yammer</name>.<name>metrics</name>.<name>Metrics</name></name>;</import>
<import>import <name><name>com</name>.<name>yammer</name>.<name>metrics</name>.<name>core</name>.<name>Meter</name></name>;</import>
<import>import <name><name>com</name>.<name>yammer</name>.<name>metrics</name>.<name>core</name>.<name>MetricName</name></name>;</import>

<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>net</name>.<name>MessagingService</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Metrics for dropped messages by verb.
 */</comment>
<class><specifier>public</specifier> class <name>DroppedMessageMetrics</name>
<block>{
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>GROUP_NAME</name> <init>= <expr>"org.apache.cassandra.metrics"</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>TYPE_NAME</name> <init>= <expr>"DroppedMessage"</expr></init></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/** Number of dropped messages */</comment>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name>Meter</name></type> <name>dropped</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>private</specifier> <name>long</name></type> <name>lastDropped</name> <init>= <expr>0</expr></init></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>DroppedMessageMetrics</name><parameter_list>(<param><decl><type><name><name>MessagingService</name>.<name>Verb</name></name></type> <name>verb</name></decl></param>)</parameter_list>
    <block>{
        <expr_stmt><expr><name>dropped</name> = <call><name><name>Metrics</name>.<name>newMeter</name></name><argument_list>(<argument><expr>new <call><name>MetricName</name><argument_list>(<argument><expr><name>GROUP_NAME</name></expr></argument>, <argument><expr><name>TYPE_NAME</name></expr></argument>, <argument><expr>"Dropped"</expr></argument>, <argument><expr><call><name><name>verb</name>.<name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr>"dropped"</expr></argument>, <argument><expr><name><name>TimeUnit</name>.<name>SECONDS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <function><type><annotation>@<name>Deprecated</name></annotation>
    <specifier>public</specifier> <name>int</name></type> <name>getRecentlyDropped</name><parameter_list>()</parameter_list>
    <block>{
        <decl_stmt><decl><type><name>long</name></type> <name>currentDropped</name> <init>= <expr><call><name><name>dropped</name>.<name>count</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>recentlyDropped</name> <init>= <expr><name>currentDropped</name> - <name>lastDropped</name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>lastDropped</name> = <name>currentDropped</name></expr>;</expr_stmt>
        <return>return <expr>(<name>int</name>)<name>recentlyDropped</name></expr>;</return>
    }</block></function>
}</block></class>
</unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.2.1\src\java\org\apache\cassandra\service\PBSPredictionResult.java"><comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>service</name></name>;</package>

<import>import <name><name>java</name>.<name>io</name>.<name>Serializable</name></name>;</import>

<class><specifier>public</specifier> class <name>PBSPredictionResult</name> <super><implements>implements <name>Serializable</name></implements></super>
<block>{
    <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>n</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>w</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>private</specifier> <name>float</name></type> <name>timeSinceWrite</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>numberVersionsStale</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>private</specifier> <name>float</name></type> <name>consistencyProbability</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>private</specifier> <name>float</name></type> <name>averageReadLatency</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>float</name></type> <name>averageWriteLatency</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>long</name></type> <name>percentileReadLatencyValue</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>float</name></type> <name>percentileReadLatencyPercentile</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>long</name></type> <name>percentileWriteLatencyValue</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>float</name></type> <name>percentileWriteLatencyPercentile</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>PBSPredictionResult</name><parameter_list>(<param><decl><type><name>int</name></type> <name>n</name></decl></param>,
                               <param><decl><type><name>int</name></type> <name>r</name></decl></param>,
                               <param><decl><type><name>int</name></type> <name>w</name></decl></param>,
                               <param><decl><type><name>float</name></type> <name>timeSinceWrite</name></decl></param>,
                               <param><decl><type><name>int</name></type> <name>numberVersionsStale</name></decl></param>,
                               <param><decl><type><name>float</name></type> <name>consistencyProbability</name></decl></param>,
                               <param><decl><type><name>float</name></type> <name>averageReadLatency</name></decl></param>,
                               <param><decl><type><name>float</name></type> <name>averageWriteLatency</name></decl></param>,
                               <param><decl><type><name>long</name></type> <name>percentileReadLatencyValue</name></decl></param>,
                               <param><decl><type><name>float</name></type> <name>percentileReadLatencyPercentile</name></decl></param>,
                               <param><decl><type><name>long</name></type> <name>percentileWriteLatencyValue</name></decl></param>,
                               <param><decl><type><name>float</name></type> <name>percentileWriteLatencyPercentile</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>n</name></name> = <name>n</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>r</name></name> = <name>r</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>w</name></name> = <name>w</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>timeSinceWrite</name></name> = <name>timeSinceWrite</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>numberVersionsStale</name></name> = <name>numberVersionsStale</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>consistencyProbability</name></name> = <name>consistencyProbability</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>averageReadLatency</name></name> = <name>averageReadLatency</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>averageWriteLatency</name></name> = <name>averageWriteLatency</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>percentileReadLatencyValue</name></name> = <name>percentileReadLatencyValue</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>percentileReadLatencyPercentile</name></name> = <name>percentileReadLatencyPercentile</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>percentileWriteLatencyValue</name></name> = <name>percentileWriteLatencyValue</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>percentileWriteLatencyPercentile</name></name> = <name>percentileWriteLatencyPercentile</name></expr>;</expr_stmt>
    }</block></constructor>

    <function><type><specifier>public</specifier> <name>int</name></type> <name>getN</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>n</name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>int</name></type> <name>getR</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>r</name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>int</name></type> <name>getW</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>w</name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>float</name></type> <name>getTimeSinceWrite</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>timeSinceWrite</name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>int</name></type> <name>getNumberVersionsStale</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>numberVersionsStale</name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>float</name></type> <name>getConsistencyProbability</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>consistencyProbability</name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>float</name></type> <name>getAverageReadLatency</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>averageReadLatency</name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>float</name></type> <name>getAverageWriteLatency</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>averageWriteLatency</name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>long</name></type> <name>getPercentileReadLatencyValue</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>percentileReadLatencyValue</name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>float</name></type> <name>getPercentileReadLatencyPercentile</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>percentileReadLatencyPercentile</name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>long</name></type> <name>getPercentileWriteLatencyValue</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>percentileWriteLatencyValue</name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>float</name></type> <name>getPercentileWriteLatencyPercentile</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>percentileWriteLatencyPercentile</name></expr>;</return>
    }</block></function>
}</block></class>

</unit>

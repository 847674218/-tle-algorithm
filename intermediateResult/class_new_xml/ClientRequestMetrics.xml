<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.2.1\src\java\org\apache\cassandra\metrics\ClientRequestMetrics.java"><comment type="block">/*
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>metrics</name></name>;</package>

<import>import <name><name>java</name>.<name>util</name>.<name>concurrent</name>.<name>TimeUnit</name></name>;</import>

<import>import <name><name>com</name>.<name>yammer</name>.<name>metrics</name>.<name>Metrics</name></name>;</import>
<import>import <name><name>com</name>.<name>yammer</name>.<name>metrics</name>.<name>core</name>.<name>Counter</name></name>;</import>
<import>import <name><name>com</name>.<name>yammer</name>.<name>metrics</name>.<name>core</name>.<name>Meter</name></name>;</import>

<class><specifier>public</specifier> class <name>ClientRequestMetrics</name> <super><extends>extends <name>LatencyMetrics</name></extends></super>
<block>{
    <decl_stmt><decl><type><annotation>@<name>Deprecated</name></annotation> <specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Counter</name></type> <name>readTimeouts</name> <init>= <expr><call><name><name>Metrics</name>.<name>newCounter</name></name><argument_list>(<argument><expr><name><name>ClientRequestMetrics</name>.<name>class</name></name></expr></argument>, <argument><expr>"ReadTimeouts"</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><annotation>@<name>Deprecated</name></annotation> <specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Counter</name></type> <name>writeTimeouts</name> <init>= <expr><call><name><name>Metrics</name>.<name>newCounter</name></name><argument_list>(<argument><expr><name><name>ClientRequestMetrics</name>.<name>class</name></name></expr></argument>, <argument><expr>"WriteTimeouts"</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><annotation>@<name>Deprecated</name></annotation> <specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Counter</name></type> <name>readUnavailables</name> <init>= <expr><call><name><name>Metrics</name>.<name>newCounter</name></name><argument_list>(<argument><expr><name><name>ClientRequestMetrics</name>.<name>class</name></name></expr></argument>, <argument><expr>"ReadUnavailables"</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><annotation>@<name>Deprecated</name></annotation> <specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Counter</name></type> <name>writeUnavailables</name> <init>= <expr><call><name><name>Metrics</name>.<name>newCounter</name></name><argument_list>(<argument><expr><name><name>ClientRequestMetrics</name>.<name>class</name></name></expr></argument>, <argument><expr>"WriteUnavailables"</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name>Meter</name></type> <name>timeouts</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name>Meter</name></type> <name>unavailables</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>ClientRequestMetrics</name><parameter_list>(<param><decl><type><name>String</name></type> <name>scope</name></decl></param>)</parameter_list>
    <block>{
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr>"org.apache.cassandra.metrics"</expr></argument>, <argument><expr>"ClientRequest"</expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>timeouts</name> = <call><name><name>Metrics</name>.<name>newMeter</name></name><argument_list>(<argument><expr><call><name><name>factory</name>.<name>createMetricName</name></name><argument_list>(<argument><expr>"Timeouts"</expr></argument>)</argument_list></call></expr></argument>, <argument><expr>"timeouts"</expr></argument>, <argument><expr><name><name>TimeUnit</name>.<name>SECONDS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>unavailables</name> = <call><name><name>Metrics</name>.<name>newMeter</name></name><argument_list>(<argument><expr><call><name><name>factory</name>.<name>createMetricName</name></name><argument_list>(<argument><expr>"Unavailables"</expr></argument>)</argument_list></call></expr></argument>, <argument><expr>"unavailables"</expr></argument>, <argument><expr><name><name>TimeUnit</name>.<name>SECONDS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>release</name><parameter_list>()</parameter_list>
    <block>{
        <expr_stmt><expr><call><name><name>super</name>.<name>release</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Metrics</name>.<name>defaultRegistry</name></name><argument_list>()</argument_list></call>.<call><name>removeMetric</name><argument_list>(<argument><expr><call><name><name>factory</name>.<name>createMetricName</name></name><argument_list>(<argument><expr>"Timeouts"</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Metrics</name>.<name>defaultRegistry</name></name><argument_list>()</argument_list></call>.<call><name>removeMetric</name><argument_list>(<argument><expr><call><name><name>factory</name>.<name>createMetricName</name></name><argument_list>(<argument><expr>"Unavailables"</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
}</block></class>
</unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.2.1\src\java\org\apache\cassandra\thrift\TCustomNonblockingServerSocket.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>thrift</name></name>;</package>

<import>import <name><name>java</name>.<name>net</name>.<name>InetSocketAddress</name></name>;</import>
<import>import <name><name>java</name>.<name>net</name>.<name>Socket</name></name>;</import>
<import>import <name><name>java</name>.<name>net</name>.<name>SocketException</name></name>;</import>

<import>import <name><name>org</name>.<name>apache</name>.<name>thrift</name>.<name>transport</name>.<name>TNonblockingServerSocket</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>thrift</name>.<name>transport</name>.<name>TNonblockingSocket</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>thrift</name>.<name>transport</name>.<name>TTransportException</name></name>;</import>
<import>import <name><name>org</name>.<name>slf4j</name>.<name>Logger</name></name>;</import>
<import>import <name><name>org</name>.<name>slf4j</name>.<name>LoggerFactory</name></name>;</import>

<class><specifier>public</specifier> class <name>TCustomNonblockingServerSocket</name> <super><extends>extends <name>TNonblockingServerSocket</name></extends></super>
<block>{
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>logger</name> <init>= <expr><call><name><name>LoggerFactory</name>.<name>getLogger</name></name><argument_list>(<argument><expr><name><name>TCustomNonblockingServerSocket</name>.<name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>boolean</name></type> <name>keepAlive</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Integer</name></type> <name>sendBufferSize</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Integer</name></type> <name>recvBufferSize</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>TCustomNonblockingServerSocket</name><parameter_list>(<param><decl><type><name>InetSocketAddress</name></type> <name>bindAddr</name></decl></param>, <param><decl><type><name>boolean</name></type> <name>keepAlive</name></decl></param>, <param><decl><type><name>Integer</name></type> <name>sendBufferSize</name></decl></param>, <param><decl><type><name>Integer</name></type> <name>recvBufferSize</name></decl></param>)</parameter_list> <throws>throws <argument><expr><name>TTransportException</name></expr></argument></throws>
    <block>{
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>bindAddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>keepAlive</name></name> = <name>keepAlive</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>sendBufferSize</name></name> = <name>sendBufferSize</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>recvBufferSize</name></name> = <name>recvBufferSize</name></expr>;</expr_stmt>
    }</block></constructor>

    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>protected</specifier> <name>TNonblockingSocket</name></type> <name>acceptImpl</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>TTransportException</name></expr></argument></throws>
    <block>{
        <decl_stmt><decl><type><name>TNonblockingSocket</name></type> <name>tsocket</name> <init>= <expr><call><name><name>super</name>.<name>acceptImpl</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr><name>tsocket</name> == null || <call><name><name>tsocket</name>.<name>getSocketChannel</name></name><argument_list>()</argument_list></call> == null</expr>)</condition><then>
            <return>return <expr><name>tsocket</name></expr>;</return></then></if>
        <decl_stmt><decl><type><name>Socket</name></type> <name>socket</name> <init>= <expr><call><name><name>tsocket</name>.<name>getSocketChannel</name></name><argument_list>()</argument_list></call>.<call><name>socket</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <comment type="line">// Any existing connection we had from this remote socket must be done now, so reset it</comment>
        <expr_stmt><expr><call><name><name>ThriftSessionManager</name>.<name>instance</name>.<name>connectionComplete</name></name><argument_list>(<argument><expr><call><name><name>socket</name>.<name>getRemoteSocketAddress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <try>try
        <block>{
            <expr_stmt><expr><call><name><name>socket</name>.<name>setKeepAlive</name></name><argument_list>(<argument><expr><name><name>this</name>.<name>keepAlive</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block>
        <catch>catch <parameter_list>(<param><decl><type><name>SocketException</name></type> <name>se</name></decl></param>)</parameter_list>
        <block>{
            <expr_stmt><expr><call><name><name>logger</name>.<name>warn</name></name><argument_list>(<argument><expr>"Failed to set keep-alive on Thrift socket."</expr></argument>, <argument><expr><name>se</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></catch></try>

        <if>if <condition>(<expr><name><name>this</name>.<name>sendBufferSize</name></name> != null</expr>)</condition><then>
        <block>{
            <try>try
            <block>{
                <expr_stmt><expr><call><name><name>socket</name>.<name>setSendBufferSize</name></name><argument_list>(<argument><expr><call><name><name>this</name>.<name>sendBufferSize</name>.<name>intValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block>
            <catch>catch <parameter_list>(<param><decl><type><name>SocketException</name></type> <name>se</name></decl></param>)</parameter_list>
            <block>{
                <expr_stmt><expr><call><name><name>logger</name>.<name>warn</name></name><argument_list>(<argument><expr>"Failed to set send buffer size on Thrift socket."</expr></argument>, <argument><expr><name>se</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></then></if>

        <if>if <condition>(<expr><name><name>this</name>.<name>recvBufferSize</name></name> != null</expr>)</condition><then>
        <block>{
            <try>try
            <block>{
                <expr_stmt><expr><call><name><name>socket</name>.<name>setReceiveBufferSize</name></name><argument_list>(<argument><expr><call><name><name>this</name>.<name>recvBufferSize</name>.<name>intValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block>
            <catch>catch <parameter_list>(<param><decl><type><name>SocketException</name></type> <name>se</name></decl></param>)</parameter_list>
            <block>{
                <expr_stmt><expr><call><name><name>logger</name>.<name>warn</name></name><argument_list>(<argument><expr>"Failed to set receive buffer size on Thrift socket."</expr></argument>, <argument><expr><name>se</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></then></if>
        <return>return <expr><name>tsocket</name></expr>;</return>
    }</block></function>
}</block></class>
</unit>

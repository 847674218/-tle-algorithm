<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.2.1\src\java\org\apache\cassandra\auth\AuthenticatedUser.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>auth</name></name>;</package>

<comment type="block" format="javadoc">/**
 * Returned from IAuthenticator#authenticate(), represents an authenticated user everywhere internally.
 */</comment>
<class><specifier>public</specifier> class <name>AuthenticatedUser</name>
<block>{
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>ANONYMOUS_USERNAME</name> <init>= <expr>"anonymous"</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>AuthenticatedUser</name></type> <name>ANONYMOUS_USER</name> <init>= <expr>new <call><name>AuthenticatedUser</name><argument_list>(<argument><expr><name>ANONYMOUS_USERNAME</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>name</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>AuthenticatedUser</name><parameter_list>(<param><decl><type><name>String</name></type> <name>name</name></decl></param>)</parameter_list>
    <block>{
        <expr_stmt><expr><name><name>this</name>.<name>name</name></name> = <name>name</name></expr>;</expr_stmt>
    }</block></constructor>

    <function><type><specifier>public</specifier> <name>String</name></type> <name>getName</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>name</name></expr>;</return>
    }</block></function>

    <comment type="block" format="javadoc">/**
     * Checks the user's superuser status.
     * Only a superuser is allowed to perform CREATE USER and DROP USER queries.
     * Im most cased, though not necessarily, a superuser will have Permission.ALL on every resource
     * (depends on IAuthorizer implementation).
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isSuper</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr>!<call><name>isAnonymous</name><argument_list>()</argument_list></call> &amp;&amp; <call><name><name>Auth</name>.<name>isSuperuser</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <comment type="block" format="javadoc">/**
     * If IAuthenticator doesn't require authentication, this method may return true.
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isAnonymous</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>this</name> == <name>ANONYMOUS_USER</name></expr>;</return>
    }</block></function>

    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><call><name><name>String</name>.<name>format</name></name><argument_list>(<argument><expr>"#&lt;User %s&gt;"</expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
}</block></class>
</unit>

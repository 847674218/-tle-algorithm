<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.2.1\src\java\org\apache\cassandra\auth\AllowAllAuthorizer.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>auth</name></name>;</package>

<import>import <name><name>java</name>.<name>util</name>.<name>Collections</name></name>;</import>
<import>import <name><name>java</name>.<name>util</name>.<name>Set</name></name>;</import>

<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>exceptions</name>.<name>InvalidRequestException</name></name>;</import>

<class><specifier>public</specifier> class <name>AllowAllAuthorizer</name> <super><implements>implements <name>IAuthorizer</name></implements></super>
<block>{
    <function><type><specifier>public</specifier> <name><name>Set</name><argument_list>&lt;<argument><name>Permission</name></argument>&gt;</argument_list></name></type> <name>authorize</name><parameter_list>(<param><decl><type><name>AuthenticatedUser</name></type> <name>user</name></decl></param>, <param><decl><type><name>IResource</name></type> <name>resource</name></decl></param>)</parameter_list>
    <block>{
        <return>return <expr><name><name>Permission</name>.<name>ALL</name></name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>grant</name><parameter_list>(<param><decl><type><name>AuthenticatedUser</name></type> <name>performer</name></decl></param>, <param><decl><type><name><name>Set</name><argument_list>&lt;<argument><name>Permission</name></argument>&gt;</argument_list></name></type> <name>permissions</name></decl></param>, <param><decl><type><name>IResource</name></type> <name>resource</name></decl></param>, <param><decl><type><name>String</name></type> <name>to</name></decl></param>)</parameter_list>
    <throws>throws <argument><expr><name>InvalidRequestException</name></expr></argument></throws>
    <block>{
        <throw>throw <expr>new <call><name>InvalidRequestException</name><argument_list>(<argument><expr>"GRANT operation is not supported by AllowAllAuthorizer"</expr></argument>)</argument_list></call></expr>;</throw>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>revoke</name><parameter_list>(<param><decl><type><name>AuthenticatedUser</name></type> <name>performer</name></decl></param>, <param><decl><type><name><name>Set</name><argument_list>&lt;<argument><name>Permission</name></argument>&gt;</argument_list></name></type> <name>permissions</name></decl></param>, <param><decl><type><name>IResource</name></type> <name>resource</name></decl></param>, <param><decl><type><name>String</name></type> <name>from</name></decl></param>)</parameter_list>
    <throws>throws <argument><expr><name>InvalidRequestException</name></expr></argument></throws>
    <block>{
        <throw>throw <expr>new <call><name>InvalidRequestException</name><argument_list>(<argument><expr>"REVOKE operation is not supported by AllowAllAuthorizer"</expr></argument>)</argument_list></call></expr>;</throw>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>revokeAll</name><parameter_list>(<param><decl><type><name>String</name></type> <name>droppedUser</name></decl></param>)</parameter_list>
    <block>{
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>revokeAll</name><parameter_list>(<param><decl><type><name>IResource</name></type> <name>droppedResource</name></decl></param>)</parameter_list>
    <block>{
    }</block></function>

    <function><type><specifier>public</specifier> <name><name>Set</name><argument_list>&lt;<argument><name>PermissionDetails</name></argument>&gt;</argument_list></name></type> <name>list</name><parameter_list>(<param><decl><type><name>AuthenticatedUser</name></type> <name>performer</name></decl></param>, <param><decl><type><name><name>Set</name><argument_list>&lt;<argument><name>Permission</name></argument>&gt;</argument_list></name></type> <name>permissions</name></decl></param>, <param><decl><type><name>IResource</name></type> <name>resource</name></decl></param>, <param><decl><type><name>String</name></type> <name>of</name></decl></param>)</parameter_list>
    <throws>throws <argument><expr><name>InvalidRequestException</name></expr></argument></throws>
    <block>{
        <throw>throw <expr>new <call><name>InvalidRequestException</name><argument_list>(<argument><expr>"LIST PERMISSIONS operation is not supported by AllowAllAuthorizer"</expr></argument>)</argument_list></call></expr>;</throw>
    }</block></function>

    <function><type><specifier>public</specifier> <name><name>Set</name><argument_list>&lt;<argument><name>IResource</name></argument>&gt;</argument_list></name></type> <name>protectedResources</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><call><name><name>Collections</name>.<name>emptySet</name></name><argument_list>()</argument_list></call></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>validateConfiguration</name><parameter_list>()</parameter_list>
    <block>{
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>setup</name><parameter_list>()</parameter_list>
    <block>{
    }</block></function>
}</block></class>
</unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.2.1\src\java\org\apache\cassandra\cql3\statements\AuthorizationStatement.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>cql3</name>.<name>statements</name></name>;</package>

<import>import <name><name>java</name>.<name>nio</name>.<name>ByteBuffer</name></name>;</import>
<import>import <name><name>java</name>.<name>util</name>.<name>List</name></name>;</import>

<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>auth</name>.<name>DataResource</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>cql3</name>.<name>CQLStatement</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>db</name>.<name>ConsistencyLevel</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>exceptions</name></name>.*;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>service</name>.<name>ClientState</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>service</name>.<name>QueryState</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>transport</name>.<name>messages</name>.<name>ResultMessage</name></name>;</import>

<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>AuthorizationStatement</name> <super><extends>extends <name>ParsedStatement</name></extends> <implements>implements <name>CQLStatement</name></implements></super>
<block>{
    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name>Prepared</name></type> <name>prepare</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr>new <call><name>Prepared</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>int</name></type> <name>getBoundsTerms</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr>0</expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>ResultMessage</name></type> <name>execute</name><parameter_list>(<param><decl><type><name>ConsistencyLevel</name></type> <name>cl</name></decl></param>, <param><decl><type><name>QueryState</name></type> <name>state</name></decl></param>, <param><decl><type><name><name>List</name><argument_list>&lt;<argument><name>ByteBuffer</name></argument>&gt;</argument_list></name></type> <name>variables</name></decl></param>)</parameter_list>
    <throws>throws <argument><expr><name>RequestValidationException</name></expr></argument>, <argument><expr><name>RequestExecutionException</name></expr></argument></throws>
    <block>{
        <return>return <expr><call><name>execute</name><argument_list>(<argument><expr><call><name><name>state</name>.<name>getClientState</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>ResultMessage</name></type> <name>execute</name><parameter_list>(<param><decl><type><name>ClientState</name></type> <name>state</name></decl></param>)</parameter_list> <throws>throws <argument><expr><name>RequestValidationException</name></expr></argument>, <argument><expr><name>RequestExecutionException</name></expr></argument></throws>;</function_decl>

    <function><type><specifier>public</specifier> <name>ResultMessage</name></type> <name>executeInternal</name><parameter_list>(<param><decl><type><name>QueryState</name></type> <name>state</name></decl></param>)</parameter_list>
    <block>{
        <comment type="line">// executeInternal is for local query only, thus altering permission doesn't make sense and is not supported</comment>
        <throw>throw <expr>new <call><name>UnsupportedOperationException</name><argument_list>()</argument_list></call></expr>;</throw>
    }</block></function>

    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>DataResource</name></type> <name>maybeCorrectResource</name><parameter_list>(<param><decl><type><name>DataResource</name></type> <name>resource</name></decl></param>, <param><decl><type><name>ClientState</name></type> <name>state</name></decl></param>)</parameter_list> <throws>throws <argument><expr><name>InvalidRequestException</name></expr></argument></throws>
    <block>{
        <if>if <condition>(<expr><call><name><name>resource</name>.<name>isColumnFamilyLevel</name></name><argument_list>()</argument_list></call> &amp;&amp; <call><name><name>resource</name>.<name>getKeyspace</name></name><argument_list>()</argument_list></call> == null</expr>)</condition><then>
            <return>return <expr><call><name><name>DataResource</name>.<name>columnFamily</name></name><argument_list>(<argument><expr><call><name><name>state</name>.<name>getKeyspace</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>resource</name>.<name>getColumnFamily</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></then></if>
        <return>return <expr><name>resource</name></expr>;</return>
    }</block></function>
}</block></class>
</unit>

licens apach softwar foundat contributor licens agreement file distribut work addit inform regard copyright ownership licens file apach licens version licens file complianc licens obtain copi licens http www apach org licens requir applic law agre write softwar distribut licens distribut express impli licens specif languag govern permiss limit licens packag org apach cassandra util import java import java util import googl common collect abstract iter import googl common collect peek iter import org apach cassandra dht partition import org apach cassandra dht rang import org apach cassandra dht token import org apach cassandra version serial import org apach cassandra net messag servic merkl tree implement binari tree merkl tree full binari tree repres perfect binari tree depth hashdepth perfect binari tree leaf sequenti hash rang node binari hash children merkl tree mani rang split full depth perfect binari tree leav tree leaf object comput valu node tree perfect hash valu node merkl tree calcul lazili base children hash rang request hash rang input pass tree rang valid calcul veri secur hash becaus hash intern tree accomplish merkl tree hashdepth repres perfect tree depth alway compar size split public class merkl tree implement serializ public static final merkl tree serial serial merkl tree serial privat static final long serial version public static final byte byte public static final int public static final int public static final int public final byte hashdepth top level rang merkl tree cover perfect world final transient howev break serial version gte becaus java serial moreov alway ship full rang request add post deseri partition public transient rang token full rang broken token serial assum system partition doesn match hell break loos privat transient partition partition privat long maxsiz privat long size privat hashabl root public static class merkl tree serial public void serial merkl tree data output stream dos int version throw version messag servic object output stream object output stream dos write object els dos write byte hashdepth dos write long maxsiz dos write long size hashabl serial serial root dos version public merkl tree deseri data input stream dis int version throw version messag servic object input stream object input stream dis tri return merkl tree read object catch class throw els byte hashdepth dis read byte long maxsiz dis read long long size dis read long merkl tree merkl tree null null hashdepth maxsiz size size root hashabl serial deseri dis version return param partition partition param rang rang tree cover param hashdepth maximum depth tree depth key space cover subrang fulli popul tree param maxsiz maximum number subrang tree public merkl tree partition partition rang token rang byte hashdepth long maxsiz assert hashdepth byte full rang rang partition partition hashdepth hashdepth maxsiz maxsiz size root leaf null static byte byte assert byte return byte initi tree split hashdepth reach addit level split violat maxsiz replac node tree public void init determin depth safe split tree byte sizedepth byte math log maxsiz math log byte depth byte math min sizedepth hashdepth root init helper full rang left full rang byte depth size long math pow depth privat hashabl init helper token left token byte depth byte max depth max reach leav return leaf token midpoint partition midpoint left midpoint equal left midpoint equal return leaf hashabl lchild init helper left midpoint depth max hashabl rchild init helper midpoint depth max return midpoint lchild rchild hashabl root return root public partition partition return partition number distinct rang tree reason measur memori usag tree assum order signific public long size return size public long maxsiz return maxsiz public void maxsiz long maxsiz maxsiz maxsiz find anoth local partition serial public void partition partition partition partition partition param ltree tree param rtree tree return list largest contigu rang tree disagre public static list tree rang differ merkl tree ltree merkl tree rtree ltree full rang equal rtree full rang throw illeg argument differ onli sens tree cover rang ltree full rang rtree full rang list tree rang diff array list tree rang tree rang activ tree rang null ltree full rang left ltree full rang byte null byte lhash ltree hash activ byte rhash rtree hash activ lhash null rhash null array equal lhash rhash differ helper ltree rtree diff activ diff add activ els lhash null rhash null diff add activ return diff function optim depth travers tree parallel tree rang hash inconsist return activ inconsist onli subrang inconsist static int differ helper merkl tree ltree merkl tree rtree list tree rang diff tree rang activ token midpoint ltree partition midpoint activ left activ tree rang left tree rang null activ left midpoint activ depth null tree rang tree rang null midpoint activ activ depth null byte lhash byte rhash recurs left lhash ltree hash left rhash rtree hash left int ldiff boolean lreso lhash null rhash null lreso array equal lhash rhash ldiff differ helper ltree rtree diff left els lreso ldiff recurs lhash ltree hash rhash rtree hash int rdiff boolean rreso lhash null rhash null rreso array equal lhash rhash rdiff differ helper ltree rtree diff els rreso rdiff ldiff rdiff children fulli inconsist return els ldiff diff add left return els rdiff diff add return return test purpos smallest rang token public tree rang token return helper root full rang left full rang byte tree rang helper hashabl hashabl token pleft token pright byte depth token hashabl instanceof leaf reach hash wrap deliv return tree rang pleft pright depth hashabl els node node hashabl rang pleft node token left child token return helper node lchild pleft node token depth els child token return helper node rchild node token pright depth invalid rang token test public void invalid token invalid helper root full rang left privat void invalid helper hashabl hashabl token pleft token hashabl hash null hashabl instanceof leaf return els node node hashabl rang pleft node token left child token invalid helper node lchild pleft els child token invalid helper node rchild node token hash rang tree rang generat recurs applic partition midpoint current doe support wrap rang partition minimum token return null ani subrang rang invalid exact rang calcul tree public byte hash rang token rang tri return hash helper root rang token full rang left full rang rang catch stop recurs return null throw stop recurs match rang privat byte hash helper hashabl hashabl rang token activ rang token rang throw stop recurs hashabl instanceof leaf rang activ fulli rang throw stop recurs bad rang return hashabl hash els node node hashabl rang token leftact rang token activ left node token rang token rightact rang token node token activ rang activ node fulli rang node hash null cach valu return node hash continu recurs hash children byte lhash hash helper node lchild leftact rang byte rhash hash helper node rchild rightact rang cach comput valu null node hash lhash rhash return node hash els children rang leftact rang left child match rang return hash helper node lchild leftact rang els rightact rang child match rang return hash helper node rchild rightact rang els throw stop recurs bad rang split rang token tree limit violat rang split depth hashdepth tree alreadi maxsiz subrang oper fail return true rang success split public boolean split token size maxsiz return fals tri root split helper root full rang left full rang byte catch stop recurs deep return fals return true privat hashabl split helper hashabl hashabl token pleft token pright byte depth token throw stop recurs deep depth hashdepth throw stop recurs deep hashabl instanceof leaf token midpoint partition midpoint pleft pright creat sensic rang start token sensic becaus rang start exclus note shouldn hit full rang veri small fair deep midpoint equal pleft midpoint equal pright throw stop recurs deep split size return midpoint leaf leaf els node recurs match child node hashabl rang pleft node token left child token node lchild split helper node lchild pleft node token depth els els child token node rchild split helper node rchild node token pright depth return node return lazi iter invalid tree rang fill order rang valid public tree rang iter invalid return tree rang iter overrid public string string string builder buff string builder buff append merkl tree root root string buff buff append return buff string public interfac rang tree tree rang return public method parent rang repres alreadi invalid sinc someon modifi hash altern tree rang creat null tree indic read onli public static class tree rang extend rang token public static final long serial version privat final merkl tree tree public final byte depth privat final hashabl hashabl tree rang merkl tree tree token left token byte depth hashabl hashabl super left tree tree depth depth hashabl hashabl public void hash byte hash assert tree null intend modif hashabl hash hash public byte hash return hashabl hash param entri row mix hash rang public void add hash row hash entri assert tree null intend modif assert hashabl instanceof leaf hashabl add hash entri hash public void add iter row hash entri entri add hash entri overrid public string string string builder buff string builder tree rang buff append super string append depth append depth return buff append string return leaf rang tree increas order full rang cover tree don wrap return rang increas order full rang wrap rang return iter wrap rang onli case leaf return public static class tree rang iter extend abstract iter tree rang implement iter tree rang peek iter tree rang stack rang visit privat final array dequ tree rang tovisit interest rang privat final merkl tree tree tree rang iter merkl tree tree tovisit array dequ tree rang tovisit add tree rang tree tree full rang left tree full rang byte tree root tree tree find tree rang return tree rang public tree rang comput tovisit empti tree rang activ tovisit pop activ hashabl instanceof leaf leaf invalid rang activ wrap tovisit empti put tovisit add activ return activ node activ hashabl tree rang left tree rang tree activ left node token activ depth node lchild tree rang tree rang tree node token activ activ depth node rchild wrap whatev left everyth greater token tovisit add left tovisit add els left tovisit add tovisit add left return data public iter tree rang iter return node merkl tree cach hash valu binari hash children static class extend hashabl public static final long serial version static final byte public final token token privat hashabl lchild privat hashabl rchild privat static serial serial serial construct token children null hash public token token hashabl lchild hashabl rchild super null token token lchild lchild rchild rchild public hashabl lchild return lchild public hashabl rchild return rchild public void lchild hashabl child lchild child public void rchild hashabl child rchild child recurs string public void string string builder buff int maxdepth buff append append class simpl buff append append token buff append hash append hashabl string hash buff append children maxdepth buff append els lchild null buff append null els lchild string buff maxdepth buff append rchild null buff append null els rchild string buff maxdepth buff append overrid public string string string builder buff string builder string buff return buff string privat static class serial public void serial data output dos int version throw hash null dos write int els dos write int hash length dos write hash token serial serial token dos hashabl serial serial lchild dos version hashabl serial serial rchild dos version public deseri data input dis int version throw int hash len dis read int byte hash hash len byte hash len null hash null dis read fulli hash token token token serial deseri dis hashabl lchild hashabl serial deseri dis version hashabl rchild hashabl serial deseri dis version return token lchild rchild leaf node merkl tree becaus merkl tree repres larger perfect binari tree depth hashdepth leaf object valu perfect tree posit row ad merkl tree tree rang valid tree extend leaf generat memori onli root store leaf static class leaf extend hashabl public static final long serial version static final byte privat static leaf serial serial leaf serial construct null hash public leaf super null public leaf byte hash super hash public leaf byte lefthash byte righthash super hashabl binari hash lefthash righthash public void string string builder buff int maxdepth buff append string overrid public string string return leaf hashabl string hash privat static class leaf serial public void serial leaf leaf data output dos throw leaf hash null dos write int els dos write int leaf hash length dos write leaf hash public leaf deseri data input dis throw int hash len dis read int byte hash hash len null byte hash len hash null dis read fulli hash return leaf hash hash valu repres row pass hash merkl tree byte hash valu digest key valu row creat veri strong hash function public static class row hash public final token token public final byte hash public row hash token token byte hash token token hash hash overrid public string string return row hash token hashabl string hash abstract class hash logic singl hash field static abstract class hashabl implement serializ privat static final long serial version privat static version serial hashabl serial hashabl serial protect byte hash protect hashabl byte hash hash hash public byte hash return hash void hash byte hash hash hash set valu hash binari hash children param lefthash hash left child param righthash hash child void hash byte lefthash byte righthash hash binari hash lefthash righthash mix valu hash hash null hash becom valu void add hash byte righthash hash null hash righthash els hash binari hash hash righthash primit hash accomplish hash left valu togeth static byte binari hash final byte left final byte return util xor left public abstract void string string builder buff int maxdepth public static string string byte hash hash null return null return hex byte hex hash privat static class hashabl serial implement version serial hashabl public void serial hashabl data output dos int version throw instanceof dos write byte serial serial dos version els instanceof leaf dos write byte leaf leaf serial serial leaf dos els throw unexpect hashabl class canon public hashabl deseri data input dis int version throw byte ident dis read byte ident return serial deseri dis version els leaf ident return leaf serial deseri dis els throw unexpect hashabl ident public long serial size hashabl hashabl int version throw unsupport oper stop recurs earli answer static abstract class stop recurs extend static class bad rang extend stop recurs public bad rang super static class invalid hash extend stop recurs public invalid hash super static class deep extend stop recurs public deep super 
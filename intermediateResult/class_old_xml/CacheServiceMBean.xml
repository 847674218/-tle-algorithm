<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.1.12\src\java\org\apache\cassandra\service\CacheServiceMBean.java"><comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>service</name></name>;</package>

<import>import <name><name>java</name>.<name>util</name>.<name>concurrent</name>.<name>ExecutionException</name></name>;</import>

<class type="interface"><specifier>public</specifier> interface <name>CacheServiceMBean</name>
<block>{
    <function_decl><type><specifier>public</specifier> <name>long</name></type> <name>getKeyCacheHits</name><parameter_list>()</parameter_list>;</function_decl>
    <function_decl><type><specifier>public</specifier> <name>long</name></type> <name>getRowCacheHits</name><parameter_list>()</parameter_list>;</function_decl>

    <function_decl><type><specifier>public</specifier> <name>long</name></type> <name>getKeyCacheRequests</name><parameter_list>()</parameter_list>;</function_decl>
    <function_decl><type><specifier>public</specifier> <name>long</name></type> <name>getRowCacheRequests</name><parameter_list>()</parameter_list>;</function_decl>

    <function_decl><type><specifier>public</specifier> <name>double</name></type> <name>getKeyCacheRecentHitRate</name><parameter_list>()</parameter_list>;</function_decl>
    <function_decl><type><specifier>public</specifier> <name>double</name></type> <name>getRowCacheRecentHitRate</name><parameter_list>()</parameter_list>;</function_decl>

    <function_decl><type><specifier>public</specifier> <name>int</name></type> <name>getRowCacheSavePeriodInSeconds</name><parameter_list>()</parameter_list>;</function_decl>
    <function_decl><type><specifier>public</specifier> <name>void</name></type> <name>setRowCacheSavePeriodInSeconds</name><parameter_list>(<param><decl><type><name>int</name></type> <name>rcspis</name></decl></param>)</parameter_list>;</function_decl>

    <function_decl><type><specifier>public</specifier> <name>int</name></type> <name>getKeyCacheSavePeriodInSeconds</name><parameter_list>()</parameter_list>;</function_decl>
    <function_decl><type><specifier>public</specifier> <name>void</name></type> <name>setKeyCacheSavePeriodInSeconds</name><parameter_list>(<param><decl><type><name>int</name></type> <name>kcspis</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * invalidate the key cache; for use after invalidating row cache
     */</comment>
    <function_decl><type><specifier>public</specifier> <name>void</name></type> <name>invalidateKeyCache</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * invalidate the row cache; for use after bulk loading via BinaryMemtable
     */</comment>
    <function_decl><type><specifier>public</specifier> <name>void</name></type> <name>invalidateRowCache</name><parameter_list>()</parameter_list>;</function_decl>

    <function_decl><type><specifier>public</specifier> <name>long</name></type> <name>getRowCacheCapacityInMB</name><parameter_list>()</parameter_list>;</function_decl>
    <function_decl><type><specifier>public</specifier> <name>long</name></type> <name>getRowCacheCapacityInBytes</name><parameter_list>()</parameter_list>;</function_decl>
    <function_decl><type><specifier>public</specifier> <name>void</name></type> <name>setRowCacheCapacityInMB</name><parameter_list>(<param><decl><type><name>long</name></type> <name>capacity</name></decl></param>)</parameter_list>;</function_decl>

    <function_decl><type><specifier>public</specifier> <name>long</name></type> <name>getKeyCacheCapacityInMB</name><parameter_list>()</parameter_list>;</function_decl>
    <function_decl><type><specifier>public</specifier> <name>long</name></type> <name>getKeyCacheCapacityInBytes</name><parameter_list>()</parameter_list>;</function_decl>
    <function_decl><type><specifier>public</specifier> <name>void</name></type> <name>setKeyCacheCapacityInMB</name><parameter_list>(<param><decl><type><name>long</name></type> <name>capacity</name></decl></param>)</parameter_list>;</function_decl>

    <function_decl><type><specifier>public</specifier> <name>long</name></type> <name>getRowCacheSize</name><parameter_list>()</parameter_list>;</function_decl> <comment type="line">// in bytes</comment>
    <function_decl><type><specifier>public</specifier> <name>long</name></type> <name>getRowCacheEntries</name><parameter_list>()</parameter_list>;</function_decl>

    <function_decl><type><specifier>public</specifier> <name>long</name></type> <name>getKeyCacheSize</name><parameter_list>()</parameter_list>;</function_decl>
    <function_decl><type><specifier>public</specifier> <name>long</name></type> <name>getKeyCacheEntries</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * sets each cache's maximum capacity to "reduce_cache_capacity_to" of its current size
     */</comment>
    <function_decl><type><specifier>public</specifier> <name>void</name></type> <name>reduceCacheSizes</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * save row and key caches
     *
     * @throws ExecutionException when attempting to retrieve the result of a task that aborted by throwing an exception
     * @throws InterruptedException when a thread is waiting, sleeping, or otherwise occupied, and the thread is interrupted, either before or during the activity.
     */</comment>
    <function_decl><type><specifier>public</specifier> <name>void</name></type> <name>saveCaches</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>ExecutionException</name></expr></argument>, <argument><expr><name>InterruptedException</name></expr></argument></throws>;</function_decl>
}</block></class>
</unit>

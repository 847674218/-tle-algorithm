<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.1.12\src\java\org\apache\cassandra\config\Config.java"><package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>config</name></name>;</package>
<comment type="block">/*
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */</comment>

<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>cache</name>.<name>SerializingCacheProvider</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>utils</name>.<name>FBUtilities</name></name>;</import>


<class><specifier>public</specifier> class <name>Config</name>
<block>{
    <decl_stmt><decl><type><specifier>public</specifier> <name>String</name></type> <name>cluster_name</name> <init>= <expr>"Test Cluster"</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>String</name></type> <name>authenticator</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>String</name></type> <name>authority</name></decl>;</decl_stmt>

    <comment type="block">/* Hashing strategy Random or OPHF */</comment>
    <decl_stmt><decl><type><specifier>public</specifier> <name>String</name></type> <name>partitioner</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <name>Boolean</name></type> <name>auto_bootstrap</name> <init>= <expr>true</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Boolean</name></type> <name>hinted_handoff_enabled</name> <init>= <expr>true</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>max_hint_window_in_ms</name> <init>= <expr>3600 * 1000</expr></init></decl>;</decl_stmt> <comment type="line">// one hour</comment>

    <decl_stmt><decl><type><specifier>public</specifier> <name>SeedProviderDef</name></type> <name>seed_provider</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>DiskAccessMode</name></type> <name>disk_access_mode</name> <init>= <expr><name><name>DiskAccessMode</name>.<name>auto</name></name></expr></init></decl>;</decl_stmt>

    <comment type="block">/* Address where to run the job tracker */</comment>
    <decl_stmt><decl><type><specifier>public</specifier> <name>String</name></type> <name>job_tracker_host</name></decl>;</decl_stmt>

    <comment type="block">/* Job Jar Location */</comment>
    <decl_stmt><decl><type><specifier>public</specifier> <name>String</name></type> <name>job_jar_file_location</name></decl>;</decl_stmt>

    <comment type="block">/* initial token in the ring */</comment>
    <decl_stmt><decl><type><specifier>public</specifier> <name>String</name></type> <name>initial_token</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <name>Long</name></type> <name>rpc_timeout_in_ms</name> <init>= <expr>new <call><name>Long</name><argument_list>(<argument><expr>2000</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>streaming_socket_timeout_in_ms</name> <init>= <expr>new <call><name>Integer</name><argument_list>(<argument><expr>0</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>phi_convict_threshold</name> <init>= <expr>8</expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>concurrent_reads</name> <init>= <expr>8</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>concurrent_writes</name> <init>= <expr>32</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>concurrent_replicates</name> <init>= <expr>32</expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>memtable_flush_writers</name> <init>= <expr>null</expr></init></decl>;</decl_stmt> <comment type="line">// will get set to the length of data dirs in DatabaseDescriptor</comment>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>memtable_total_space_in_mb</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>storage_port</name> <init>= <expr>7000</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>ssl_storage_port</name> <init>= <expr>7001</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>String</name></type> <name>listen_address</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>String</name></type> <name>broadcast_address</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>String</name></type> <name>internode_authenticator</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <name>String</name></type> <name>rpc_address</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>rpc_port</name> <init>= <expr>9160</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>String</name></type> <name>rpc_server_type</name> <init>= <expr>"sync"</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Boolean</name></type> <name>rpc_keepalive</name> <init>= <expr>true</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>rpc_min_threads</name> <init>= <expr>null</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>rpc_max_threads</name> <init>= <expr>null</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>rpc_send_buff_size_in_bytes</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>rpc_recv_buff_size_in_bytes</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><annotation>@<name>Deprecated</name></annotation>
    <specifier>public</specifier> <name>Integer</name></type> <name>thrift_max_message_length_in_mb</name> <init>= <expr>16</expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>thrift_framed_transport_size_in_mb</name> <init>= <expr>15</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Boolean</name></type> <name>snapshot_before_compaction</name> <init>= <expr>false</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Boolean</name></type> <name>auto_snapshot</name> <init>= <expr>true</expr></init></decl>;</decl_stmt>

    <comment type="block">/* if the size of columns or super-columns are more than this, indexing will kick in */</comment>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>column_index_size_in_kb</name> <init>= <expr>64</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>in_memory_compaction_limit_in_mb</name> <init>= <expr>64</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>concurrent_compactors</name> <init>= <expr><call><name><name>FBUtilities</name>.<name>getAvailableProcessors</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>compaction_throughput_mb_per_sec</name> <init>= <expr>16</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Boolean</name></type> <name>multithreaded_compaction</name> <init>= <expr>false</expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>max_streaming_retries</name> <init>= <expr>3</expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>stream_throughput_outbound_megabits_per_sec</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <name>String</name><index>[]</index></type> <name>data_file_directories</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <name>String</name></type> <name>saved_caches_directory</name></decl>;</decl_stmt>

    <comment type="line">// Commit Log</comment>
    <decl_stmt><decl><type><specifier>public</specifier> <name>String</name></type> <name>commitlog_directory</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>commitlog_total_space_in_mb</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>CommitLogSync</name></type> <name>commitlog_sync</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Double</name></type> <name>commitlog_sync_batch_window_in_ms</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>commitlog_sync_period_in_ms</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>int</name></type> <name>commitlog_segment_size_in_mb</name> <init>= <expr>32</expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <name>String</name></type> <name>endpoint_snitch</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Boolean</name></type> <name>dynamic_snitch</name> <init>= <expr>true</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>dynamic_snitch_update_interval_in_ms</name> <init>= <expr>100</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>dynamic_snitch_reset_interval_in_ms</name> <init>= <expr>600000</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Double</name></type> <name>dynamic_snitch_badness_threshold</name> <init>= <expr>0.1</expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <name>String</name></type> <name>request_scheduler</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>RequestSchedulerId</name></type> <name>request_scheduler_id</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>RequestSchedulerOptions</name></type> <name>request_scheduler_options</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <name>EncryptionOptions</name></type> <name>encryption_options</name> <init>= <expr>new <call><name>EncryptionOptions</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <name>Integer</name></type> <name>index_interval</name> <init>= <expr>128</expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <name>Double</name></type> <name>flush_largest_memtables_at</name> <init>= <expr>1.0</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>Double</name></type> <name>reduce_cache_sizes_at</name> <init>= <expr>1.0</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>double</name></type> <name>reduce_cache_capacity_to</name> <init>= <expr>0.6</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>int</name></type> <name>hinted_handoff_throttle_delay_in_ms</name> <init>= <expr>0</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>boolean</name></type> <name>compaction_preheat_key_cache</name> <init>= <expr>true</expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <name>boolean</name></type> <name>incremental_backups</name> <init>= <expr>false</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>int</name></type> <name>memtable_flush_queue_size</name> <init>= <expr>4</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>boolean</name></type> <name>trickle_fsync</name> <init>= <expr>false</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>int</name></type> <name>trickle_fsync_interval_in_kb</name> <init>= <expr>10240</expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <name>Long</name></type> <name>key_cache_size_in_mb</name> <init>= <expr>null</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>int</name></type> <name>key_cache_save_period</name> <init>= <expr>14400</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>int</name></type> <name>key_cache_keys_to_save</name> <init>= <expr><name><name>Integer</name>.<name>MAX_VALUE</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <name>long</name></type> <name>row_cache_size_in_mb</name> <init>= <expr>0</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>int</name></type> <name>row_cache_save_period</name> <init>= <expr>0</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>int</name></type> <name>row_cache_keys_to_save</name> <init>= <expr><name><name>Integer</name>.<name>MAX_VALUE</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>String</name></type> <name>row_cache_provider</name> <init>= <expr><call><name><name>SerializingCacheProvider</name>.<name><name>class</name>.<name>getSimpleName</name></name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>boolean</name></type> <name>populate_io_cache_on_flush</name> <init>= <expr>false</expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>boolean</name></type> <name>loadYaml</name> <init>= <expr>true</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>boolean</name></type> <name>outboundBindAny</name> <init>= <expr>false</expr></init></decl>;</decl_stmt>

    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>boolean</name></type> <name>getOutboundBindAny</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>outboundBindAny</name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>setOutboundBindAny</name><parameter_list>(<param><decl><type><name>boolean</name></type> <name>value</name></decl></param>)</parameter_list>
    <block>{
        <expr_stmt><expr><name>outboundBindAny</name> = <name>value</name></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>boolean</name></type> <name>getLoadYaml</name><parameter_list>()</parameter_list>
    <block>{
       <return>return <expr><name>loadYaml</name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>setLoadYaml</name><parameter_list>(<param><decl><type><name>boolean</name></type> <name>value</name></decl></param>)</parameter_list>
    <block>{
        <expr_stmt><expr><name>loadYaml</name> = <name>value</name></expr>;</expr_stmt>
    }</block></function>

    <enum><specifier>public</specifier> <specifier>static</specifier> enum <name>CommitLogSync</name> <block>{
        <decl><name>periodic</name></decl>,
        <decl><name>batch</name></decl>
    }</block></enum>

    <enum><specifier>public</specifier> <specifier>static</specifier> enum <name>DiskAccessMode</name> <block>{
        <decl><name>auto</name></decl>,
        <decl><name>mmap</name></decl>,
        <decl><name>mmap_index_only</name></decl>,
        <decl><name>standard</name></decl>,
    }</block></enum>

    <enum><specifier>public</specifier> <specifier>static</specifier> enum <name>RequestSchedulerId</name>
    <block>{
        <decl><name>keyspace</name></decl>
    }</block></enum>
}</block></class>
</unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.1.12\src\java\org\apache\cassandra\cql3\KSPropDefs.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>cql3</name></name>;</package>

<import>import <name><name>java</name>.<name>util</name></name>.*;</import>

<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>config</name>.<name>KSMetaData</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>config</name>.<name>ConfigurationException</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>thrift</name>.<name>InvalidRequestException</name></name>;</import>

<class><specifier>public</specifier> class <name>KSPropDefs</name> <super><extends>extends <name>PropertyDefinitions</name></extends></super>
<block>{
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>KW_DURABLE_WRITES</name> <init>= <expr>"durable_writes"</expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>KW_REPLICATION_STRATEGY</name> <init>= <expr>"strategy_class"</expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>Set</name><argument_list>&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>keywords</name> <init>= <expr>new <call><name><name>HashSet</name><argument_list>&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>Set</name><argument_list>&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>obsoleteKeywords</name> <init>= <expr>new <call><name><name>HashSet</name><argument_list>&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr>static
    <block>{
        <expr><call><name><name>keywords</name>.<name>add</name></name><argument_list>(<argument><expr><name>KW_DURABLE_WRITES</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>keywords</name>.<name>add</name></name><argument_list>(<argument><expr><name>KW_REPLICATION_STRATEGY</name></expr></argument>)</argument_list></call></expr>;
    }</block>

    private <name>String</name> <name>strategyClass</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>Map</name><argument_list>&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>strategyOptions</name> <init>= <expr>new <call><name><name>HashMap</name><argument_list>&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>validate</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>ConfigurationException</name></expr></argument>, <argument><expr><name>InvalidRequestException</name></expr></argument></throws>
    <block>{
        <expr_stmt><expr><call><name>validate</name><argument_list>(<argument><expr><name>keywords</name></expr></argument>, <argument><expr><name>obsoleteKeywords</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if>if <condition>(<expr>!<call><name><name>properties</name>.<name>containsKey</name></name><argument_list>(<argument><expr>"strategy_class"</expr></argument>)</argument_list></call></expr>)</condition><then>
            <throw>throw <expr>new <call><name>InvalidRequestException</name><argument_list>(<argument><expr>"missing required argument \"strategy_class\""</expr></argument>)</argument_list></call></expr>;</throw></then></if>
        <expr_stmt><expr><name>strategyClass</name> = <call><name><name>properties</name>.<name>get</name></name><argument_list>(<argument><expr>"strategy_class"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name>void</name></type> <name>addProperty</name><parameter_list>(<param><decl><type><name>String</name></type> <name>name</name></decl></param>, <param><decl><type><name>String</name></type> <name>value</name></decl></param>)</parameter_list> <throws>throws <argument><expr><name>InvalidRequestException</name></expr></argument></throws>
    <block>{
        <comment type="line">// optional</comment>
        <if>if <condition>(<expr><call><name><name>name</name>.<name>contains</name></name><argument_list>(<argument><expr>":"</expr></argument>)</argument_list></call> &amp;&amp; <call><name><name>name</name>.<name>startsWith</name></name><argument_list>(<argument><expr>"strategy_options"</expr></argument>)</argument_list></call></expr>)</condition><then>
            <expr_stmt><expr><call><name><name>strategyOptions</name>.<name>put</name></name><argument_list>(<argument><expr><call><name><name>name</name>.<name>split</name></name><argument_list>(<argument><expr>":"</expr></argument>)</argument_list></call><index>[<expr>1</expr>]</index></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
        <else>else
            <expr_stmt><expr><call><name><name>super</name>.<name>addProperty</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
    }</block></function>

    <function><type><specifier>public</specifier> <name>String</name></type> <name>getReplicationStrategyClass</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>strategyClass</name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name><name>Map</name><argument_list>&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getReplicationOptions</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><name>strategyOptions</name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>KSMetaData</name></type> <name>asKSMetadata</name><parameter_list>(<param><decl><type><name>String</name></type> <name>ksName</name></decl></param>)</parameter_list> <throws>throws <argument><expr><name>InvalidRequestException</name></expr></argument>, <argument><expr><name>ConfigurationException</name></expr></argument></throws>
    <block>{
        <return>return <expr><call><name><name>KSMetaData</name>.<name>newKeyspace</name></name><argument_list>(<argument><expr><name>ksName</name></expr></argument>, <argument><expr><call><name>getReplicationStrategyClass</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getReplicationOptions</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getBoolean</name><argument_list>(<argument><expr><name>KW_DURABLE_WRITES</name></expr></argument>, <argument><expr>true</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>KSMetaData</name></type> <name>asKSMetadataUpdate</name><parameter_list>(<param><decl><type><name>KSMetaData</name></type> <name>old</name></decl></param>)</parameter_list> <throws>throws <argument><expr><name>InvalidRequestException</name></expr></argument>, <argument><expr><name>ConfigurationException</name></expr></argument></throws>
    <block>{
        <decl_stmt><decl><type><name>String</name></type> <name>sClass</name> <init>= <expr><name>strategyClass</name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>Map</name><argument_list>&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>sOptions</name> <init>= <expr><call><name>getReplicationOptions</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr><name>sClass</name> == null</expr>)</condition><then>
        <block>{
            <expr_stmt><expr><name>sClass</name> = <call><name><name>old</name>.<name>strategyClass</name>.<name>getName</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>sOptions</name> = <name><name>old</name>.<name>strategyOptions</name></name></expr>;</expr_stmt>
        }</block></then></if>
        <return>return <expr><call><name><name>KSMetaData</name>.<name>newKeyspace</name></name><argument_list>(<argument><expr><name><name>old</name>.<name>name</name></name></expr></argument>, <argument><expr><name>sClass</name></expr></argument>, <argument><expr><name>sOptions</name></expr></argument>, <argument><expr><call><name>getBoolean</name><argument_list>(<argument><expr><name>KW_DURABLE_WRITES</name></expr></argument>, <argument><expr><name><name>old</name>.<name>durableWrites</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
}</block></class>
</unit>

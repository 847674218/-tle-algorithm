<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.1.12\src\java\org\apache\cassandra\db\commitlog\ICommitLogExecutorService.java"><package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>db</name>.<name>commitlog</name></name>;</package>
<comment type="block">/*
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */</comment>


<import>import <name><name>java</name>.<name>util</name>.<name>concurrent</name>.<name>Callable</name></name>;</import>
<import>import <name><name>java</name>.<name>util</name>.<name>concurrent</name>.<name>Future</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Like ExecutorService, but customized for batch and periodic commitlog execution.
 */</comment>
<class type="interface"><specifier>public</specifier> interface <name>ICommitLogExecutorService</name>
<block>{
    <comment type="block" format="javadoc">/**
     * Get the number of completed tasks
     */</comment>
    <function_decl><type><specifier>public</specifier> <name>long</name></type> <name>getCompletedTasks</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Get the number of tasks waiting to be executed
     */</comment>
    <function_decl><type><specifier>public</specifier> <name>long</name></type> <name>getPendingTasks</name><parameter_list>()</parameter_list>;</function_decl>


    <function_decl><type><specifier>public</specifier> <argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list> <name><name>Future</name><argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>submit</name><parameter_list>(<param><decl><type><name><name>Callable</name><argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>task</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * submits the adder for execution and blocks for it to be synced, if necessary
     */</comment>
    <function_decl><type><specifier>public</specifier> <name>void</name></type> <name>add</name><parameter_list>(<param><decl><type><name><name>CommitLog</name>.<name>LogRecordAdder</name></name></type> <name>adder</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/** shuts down the CommitLogExecutor in an orderly fashion */</comment>
    <function_decl><type><specifier>public</specifier> <name>void</name></type> <name>shutdown</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/** Blocks until shutdown is complete. */</comment>
    <function_decl><type><specifier>public</specifier> <name>void</name></type> <name>awaitTermination</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>InterruptedException</name></expr></argument></throws>;</function_decl>
}</block></class>
</unit>

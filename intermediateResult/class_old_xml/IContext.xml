<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.1.12\src\java\org\apache\cassandra\db\context\IContext.java"><comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>db</name>.<name>context</name></name>;</package>

<import>import <name><name>java</name>.<name>nio</name>.<name>ByteBuffer</name></name>;</import>

<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>utils</name>.<name>Allocator</name></name>;</import>

<comment type="block" format="javadoc">/**
 * An opaque commutative context.
 *
 * Maintains a ByteBuffer context that represents a partitioned commutative value.
 */</comment>
<class type="interface"><specifier>public</specifier> interface <name>IContext</name>
<block>{
    <enum><specifier>public</specifier> <specifier>static</specifier> enum <name>ContextRelationship</name>
    <block>{
        <decl><name>EQUAL</name></decl>,
        <decl><name>GREATER_THAN</name></decl>,
        <decl><name>LESS_THAN</name></decl>,
        <decl><name>DISJOINT</name></decl>
    }</block></enum><empty_stmt>;</empty_stmt>

    <comment type="block" format="javadoc">/**
     * Determine the relationship between two contexts.
     *
     * EQUAL:        Equal set of nodes and every count is equal.
     * GREATER_THAN: Superset of nodes and every count is equal or greater than its corollary.
     * LESS_THAN:    Subset of nodes and every count is equal or less than its corollary.
     * DISJOINT:     Node sets are not equal and/or counts are not all greater or less than.
     *
     * @param left
     *            context.
     * @param right
     *            context.
     * @return the ContextRelationship between the contexts.
     */</comment>
    <function_decl><type><specifier>public</specifier> <name>ContextRelationship</name></type> <name>diff</name><parameter_list>(<param><decl><type><name>ByteBuffer</name></type> <name>left</name></decl></param>, <param><decl><type><name>ByteBuffer</name></type> <name>right</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Return a context w/ an aggregated count for each node id.
     *
     * @param left
     *            context.
     * @param right
     *            context.
     * @param allocator
     *            an allocator to allocate the new context from.
     */</comment>
    <function_decl><type><specifier>public</specifier> <name>ByteBuffer</name></type> <name>merge</name><parameter_list>(<param><decl><type><name>ByteBuffer</name></type> <name>left</name></decl></param>, <param><decl><type><name>ByteBuffer</name></type> <name>right</name></decl></param>, <param><decl><type><name>Allocator</name></type> <name>allocator</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Human-readable String from context.
     *
     * @param context
     *            context.
     * @return a human-readable String of the context.
     */</comment>
    <function_decl><type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>(<param><decl><type><name>ByteBuffer</name></type> <name>context</name></decl></param>)</parameter_list>;</function_decl>
}</block></class>
</unit>

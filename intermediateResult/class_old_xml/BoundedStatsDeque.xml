<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.1.12\src\java\org\apache\cassandra\utils\BoundedStatsDeque.java"><comment type="block">/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>utils</name></name>;</package>

<import>import <name><name>java</name>.<name>util</name>.<name>Iterator</name></name>;</import>
<import>import <name><name>java</name>.<name>util</name>.<name>NoSuchElementException</name></name>;</import>
<import>import <name><name>java</name>.<name>util</name>.<name>concurrent</name>.<name>LinkedBlockingDeque</name></name>;</import>

<comment type="block" format="javadoc">/**
 * bounded threadsafe deque
 */</comment>
<class><specifier>public</specifier> class <name>BoundedStatsDeque</name> <super><extends>extends <name>AbstractStatsDeque</name></extends></super>
<block>{
    <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name><name>LinkedBlockingDeque</name><argument_list>&lt;<argument><name>Double</name></argument>&gt;</argument_list></name></type> <name>deque</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>BoundedStatsDeque</name><parameter_list>(<param><decl><type><name>int</name></type> <name>size</name></decl></param>)</parameter_list>
    <block>{
        <expr_stmt><expr><name>deque</name> = new <call><name><name>LinkedBlockingDeque</name><argument_list>&lt;<argument><name>Double</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <function><type><specifier>public</specifier> <name><name>Iterator</name><argument_list>&lt;<argument><name>Double</name></argument>&gt;</argument_list></name></type> <name>iterator</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><call><name><name>deque</name>.<name>iterator</name></name><argument_list>()</argument_list></call></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>int</name></type> <name>size</name><parameter_list>()</parameter_list>
    <block>{
        <return>return <expr><call><name><name>deque</name>.<name>size</name></name><argument_list>()</argument_list></call></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>clear</name><parameter_list>()</parameter_list>
    <block>{
        <expr_stmt><expr><call><name><name>deque</name>.<name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>add</name><parameter_list>(<param><decl><type><name>double</name></type> <name>i</name></decl></param>)</parameter_list>
    <block>{
        <if>if <condition>(<expr>!<call><name><name>deque</name>.<name>offer</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>)</condition><then>
        <block>{
            <try>try
            <block>{
                <expr_stmt><expr><call><name><name>deque</name>.<name>remove</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            }</block>
            <catch>catch <parameter_list>(<param><decl><type><name>NoSuchElementException</name></type> <name>e</name></decl></param>)</parameter_list>
            <block>{
                <comment type="line">// oops, clear() beat us to it</comment>
            }</block></catch></try>
            <expr_stmt><expr><call><name><name>deque</name>.<name>offer</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
    }</block></function>
}</block></class>
</unit>

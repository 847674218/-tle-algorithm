<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\mrahimi1\Desktop\FSE-2015-LinkEvolution\srcML-Win\srcML-Win\cassandra-cassandra-1.1.12\src\java\org\apache\cassandra\db\IColumnContainer.java"><package>package <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>db</name></name>;</package>
<comment type="block">/*
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */</comment>

<import>import <name><name>java</name>.<name>nio</name>.<name>ByteBuffer</name></name>;</import>
<import>import <name><name>java</name>.<name>util</name>.<name>Collection</name></name>;</import>

<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>db</name>.<name>marshal</name>.<name>AbstractType</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>cassandra</name>.<name>utils</name>.<name>Allocator</name></name>;</import>

<class type="interface"><specifier>public</specifier> interface <name>IColumnContainer</name>
<block>{
    <function_decl><type><specifier>public</specifier> <name>void</name></type> <name>addColumn</name><parameter_list>(<param><decl><type><name>IColumn</name></type> <name>column</name></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><specifier>public</specifier> <name>void</name></type> <name>addColumn</name><parameter_list>(<param><decl><type><name>IColumn</name></type> <name>column</name></decl></param>, <param><decl><type><name>Allocator</name></type> <name>allocator</name></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><specifier>public</specifier> <name>void</name></type> <name>remove</name><parameter_list>(<param><decl><type><name>ByteBuffer</name></type> <name>columnName</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Replace oldColumn if represent by newColumn.
     * Returns true if oldColumn was present (and thus replaced)
     * oldColumn and newColumn should have the same name.
     * !NOTE! This should only be used if you know this is what you need. To
     * add a column such that it use the usual column resolution rules in a
     * thread safe manner, use addColumn.
     */</comment>
    <function_decl><type><specifier>public</specifier> <name>boolean</name></type> <name>replace</name><parameter_list>(<param><decl><type><name>IColumn</name></type> <name>oldColumn</name></decl></param>, <param><decl><type><name>IColumn</name></type> <name>newColumn</name></decl></param>)</parameter_list>;</function_decl>

    <function_decl><type><specifier>public</specifier> <name>boolean</name></type> <name>isMarkedForDelete</name><parameter_list>()</parameter_list>;</function_decl>
    <function_decl><type><specifier>public</specifier> <name>long</name></type> <name>getMarkedForDeleteAt</name><parameter_list>()</parameter_list>;</function_decl>
    <function_decl><type><specifier>public</specifier> <name>boolean</name></type> <name>hasIrrelevantData</name><parameter_list>(<param><decl><type><name>int</name></type> <name>gcBefore</name></decl></param>)</parameter_list>;</function_decl>

    <function_decl><type><specifier>public</specifier> <name><name>AbstractType</name><argument_list>&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>getComparator</name><parameter_list>()</parameter_list>;</function_decl>

    <function_decl><type><specifier>public</specifier> <name><name>Collection</name><argument_list>&lt;<argument><name>IColumn</name></argument>&gt;</argument_list></name></type> <name>getSortedColumns</name><parameter_list>()</parameter_list>;</function_decl>
}</block></class>
</unit>
